language ESSENCE' 1.0

letting let1 be -4
find var2_ExplicitVarSizeWithMarker_Marker: int(0..11)
find var2_ExplicitVarSizeWithMarker_Values: matrix indexed by [int(1..11)] of int(-4..5, 2)
find var2_Occurrence: matrix indexed by [int(-4..5, 2)] of bool
branching on [var2_Occurrence, var2_ExplicitVarSizeWithMarker_Marker, var2_ExplicitVarSizeWithMarker_Values]
such that
    or([q6 <= var2_ExplicitVarSizeWithMarker_Marker /\
        !or([q8 <= var2_ExplicitVarSizeWithMarker_Marker /\
             var2_ExplicitVarSizeWithMarker_Values[q8] = var2_ExplicitVarSizeWithMarker_Values[q6]
                 | q8 : int(1..11)])
            | q6 : int(1..11)])
    \/
    or([q9 <= var2_ExplicitVarSizeWithMarker_Marker /\
        !or([q11 <= var2_ExplicitVarSizeWithMarker_Marker /\
             var2_ExplicitVarSizeWithMarker_Values[q11] = var2_ExplicitVarSizeWithMarker_Values[q9]
                 | q11 : int(1..11)])
            | q9 : int(1..11)]),
    and([q1 + 1 <= var2_ExplicitVarSizeWithMarker_Marker ->
         var2_ExplicitVarSizeWithMarker_Values[q1] < var2_ExplicitVarSizeWithMarker_Values[q1 + 1]
             | q1 : int(1..10)]),
    and([q2 > var2_ExplicitVarSizeWithMarker_Marker -> var2_ExplicitVarSizeWithMarker_Values[q2] = -4
             | q2 : int(1..11)]),
    sum([toInt(var2_Occurrence[q12]) | q12 : int(-4..5, 2)]) = var2_ExplicitVarSizeWithMarker_Marker,
    sum([toInt(var2_Occurrence[q16]) | q16 : int(-4..5, 2)]) <= var2_ExplicitVarSizeWithMarker_Marker,
    and([var2_Occurrence[q13] ->
         or([q15 <= var2_ExplicitVarSizeWithMarker_Marker /\ var2_ExplicitVarSizeWithMarker_Values[q15] = q13
                 | q15 : int(1..11)])
             | q13 : int(-4..5, 2)]),
    var2_ExplicitVarSizeWithMarker_Marker <= sum([toInt(var2_Occurrence[q18]) | q18 : int(-4..5, 2)]),
    and([q19 <= var2_ExplicitVarSizeWithMarker_Marker -> var2_Occurrence[var2_ExplicitVarSizeWithMarker_Values[q19]]
             | q19 : int(1..11)])

