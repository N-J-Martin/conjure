language ESSENCE' 1.0

find x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Flags: matrix indexed by [int(1..6)] of bool
find x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Values_ExplicitBounded_Length:
        matrix indexed by [int(1..6)] of int(3)
find x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Values_ExplicitBounded_Values:
        matrix indexed by [int(1..6), int(1..3)] of int(1..6)
such that
    alldifferent_except([toInt(x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Flags[q13] /\
                               q14 <=
                               x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Values_ExplicitBounded_Length[q13])
                         *
                         catchUndef(x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Values_ExplicitBounded_Values
                                        [q13, q14],
                                    0)
                             | q13 : int(1..6), q14 : int(1..3)],
                        0),
    and([x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Flags[q15] ->
         x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Values_ExplicitBounded_Length[q15] >= 1
             | q15 : int(1..6)]),
    and([x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Flags[q4 + 1] ->
         x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Values_ExplicitBounded_Length[q4] <
         x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Values_ExplicitBounded_Length[q4 + 1]
         \/
         x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Values_ExplicitBounded_Length[q4] =
         x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Values_ExplicitBounded_Length[q4 + 1]
         /\
         x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Values_ExplicitBounded_Values[q4, ..] <lex
         x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Values_ExplicitBounded_Values[q4 + 1, ..]
             | q4 : int(1..5)]),
    and([x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Flags[q5] = false ->
         x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Values_ExplicitBounded_Length[q5] = 3 /\
         and([x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Values_ExplicitBounded_Values[q5, q12] = 1
                  | q12 : int(1..3)])
             | q5 : int(1..6)]),
    and([x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Flags[q6 + 1] ->
         x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Flags[q6]
             | q6 : int(1..5)]),
    sum([toInt(x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Flags[q7]) | q7 : int(1..6)]) <= 6,
    6 =
    sum([toInt(x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Flags[q11]) *
         catchUndef(x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Values_ExplicitBounded_Length[q11], 0)
             | q11 : int(1..6)])

