language ESSENCE' 1.0

find x_Function1DPartial_Flags: matrix indexed by [int(1..3)] of bool
find x_Function1DPartial_Values: matrix indexed by [int(1..3)] of int(1..3)
find y_Function1DPartial_Flags: matrix indexed by [int(1..3)] of bool
find y_Function1DPartial_Values: matrix indexed by [int(1..3)] of int(1..3)
branching on
    [x_Function1DPartial_Flags, x_Function1DPartial_Values, y_Function1DPartial_Flags, y_Function1DPartial_Values]
such that
    and([x_Function1DPartial_Flags[q11] ->
         y_Function1DPartial_Values[x_Function1DPartial_Values[q11]] = q11 /\
         y_Function1DPartial_Flags[x_Function1DPartial_Values[q11]]
             | q11 : int(1..3)]),
    and([y_Function1DPartial_Flags[q12] ->
         x_Function1DPartial_Values[y_Function1DPartial_Values[q12]] = q12 /\
         x_Function1DPartial_Flags[y_Function1DPartial_Values[q12]]
             | q12 : int(1..3)]),
    or([x_Function1DPartial_Flags[q14] /\
        !(y_Function1DPartial_Values[q14] = x_Function1DPartial_Values[q14] /\ y_Function1DPartial_Flags[q14])
            | q14 : int(1..3)])
    \/
    or([y_Function1DPartial_Flags[q15] /\
        !(x_Function1DPartial_Values[q15] = y_Function1DPartial_Values[q15] /\ x_Function1DPartial_Flags[q15])
            | q15 : int(1..3)]),
    and([x_Function1DPartial_Flags[q17] -> q17 != x_Function1DPartial_Values[q17] | q17 : int(1..3)]),
    x_Function1DPartial_Flags[1],
    or([y_Function1DPartial_Flags[q9] /\ y_Function1DPartial_Values[q9] = 2 | q9 : int(1..3)]),
    and([x_Function1DPartial_Flags[q1] = false -> x_Function1DPartial_Values[q1] = 1 | q1 : int(1..3)]),
    and([y_Function1DPartial_Flags[q4] = false -> y_Function1DPartial_Values[q4] = 1 | q4 : int(1..3)])

