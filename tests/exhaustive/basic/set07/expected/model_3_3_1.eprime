language ESSENCE' 1.0

find x_ExplicitVarSizeWithMarker_Marker: int(0..4)
find x_ExplicitVarSizeWithMarker_Values: matrix indexed by [int(1..4)] of int(1..4)
find x_Occurrence: matrix indexed by [int(1..4)] of bool
branching on [x_Occurrence, x_ExplicitVarSizeWithMarker_Marker, x_ExplicitVarSizeWithMarker_Values]
such that
    and([or([q6 <= x_ExplicitVarSizeWithMarker_Marker /\ x_ExplicitVarSizeWithMarker_Values[q6] = q9_1
                 | q6 : int(1..4)])
         /\
         !or([q8 <= x_ExplicitVarSizeWithMarker_Marker /\ x_ExplicitVarSizeWithMarker_Values[q8] = q9_2
                  | q8 : int(1..4)])
             | q9_1 : int(1..3), q9_2 : int(4..9)]),
    and([q1 + 1 <= x_ExplicitVarSizeWithMarker_Marker ->
         x_ExplicitVarSizeWithMarker_Values[q1] < x_ExplicitVarSizeWithMarker_Values[q1 + 1]
             | q1 : int(1..3)]),
    and([q2 > x_ExplicitVarSizeWithMarker_Marker -> x_ExplicitVarSizeWithMarker_Values[q2] = 1 | q2 : int(1..4)]),
    sum([toInt(x_Occurrence[q10]) | q10 : int(1..4)]) = x_ExplicitVarSizeWithMarker_Marker,
    sum([toInt(x_Occurrence[q14]) | q14 : int(1..4)]) <= x_ExplicitVarSizeWithMarker_Marker,
    and([x_Occurrence[q11] ->
         or([q13 <= x_ExplicitVarSizeWithMarker_Marker /\ x_ExplicitVarSizeWithMarker_Values[q13] = q11
                 | q13 : int(1..4)])
             | q11 : int(1..4)]),
    x_ExplicitVarSizeWithMarker_Marker <= sum([toInt(x_Occurrence[q16]) | q16 : int(1..4)]),
    and([q17 <= x_ExplicitVarSizeWithMarker_Marker -> x_Occurrence[x_ExplicitVarSizeWithMarker_Values[q17]]
             | q17 : int(1..4)])

