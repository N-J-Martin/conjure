language ESSENCE' 1.0

find f_Function1DPartial_Flags: matrix indexed by [int(1..3)] of bool
find f_Function1DPartial_Values: matrix indexed by [int(1..3)] of int(1..3)
branching on [f_Function1DPartial_Flags, f_Function1DPartial_Values]
such that
    2 = sum([toInt(f_Function1DPartial_Flags[q6] /\ f_Function1DPartial_Values[q6] = 2) | q6 : int(1..3)]),
    2 <= sum([toInt(f_Function1DPartial_Flags[q10] /\ f_Function1DPartial_Values[q10] = 2) | q10 : int(1..3)]),
    or([f_Function1DPartial_Flags[q13] /\ f_Function1DPartial_Values[q13] = 2 /\ q13 = 1 | q13 : int(1..3)]),
    or([f_Function1DPartial_Flags[q16] /\ f_Function1DPartial_Values[q16] = 2 /\ q16 = 2 | q16 : int(1..3)]),
    sum([toInt(f_Function1DPartial_Flags[q20] /\ f_Function1DPartial_Values[q20] = 2) | q20 : int(1..3)]) <= 2,
    and([f_Function1DPartial_Flags[q22] /\ f_Function1DPartial_Values[q22] = 2 -> 1 = q22 \/ 2 = q22
             | q22 : int(1..3)]),
    and([f_Function1DPartial_Flags[q1] = false -> f_Function1DPartial_Values[q1] = 1 | q1 : int(1..3)])

