language ESSENCE' 1.0

find x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Flags: matrix indexed by [int(1..4)] of bool
find x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Values_ExplicitBounded_Length:
        matrix indexed by [int(1..4)] of int(0..4)
find x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Values_ExplicitBounded_Values:
        matrix indexed by [int(1..4), int(1..4)] of int(1..4)
such that
    and([x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Flags[q15] ->
         x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Values_ExplicitBounded_Length[q15] = 2
             | q15 : int(1..4)]),
    alldifferent_except([toInt(x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Flags[q16] /\
                               q17 <=
                               x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Values_ExplicitBounded_Length[q16])
                         *
                         catchUndef(x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Values_ExplicitBounded_Values
                                        [q16, q17],
                                    0)
                             | q16 : int(1..4), q17 : int(1..4)],
                        0),
    and([x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Flags[q18] ->
         x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Values_ExplicitBounded_Length[q18] >= 1
             | q18 : int(1..4)]),
    and([x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Flags[q4 + 1] ->
         x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Values_ExplicitBounded_Length[q4] <
         x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Values_ExplicitBounded_Length[q4 + 1]
         \/
         x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Values_ExplicitBounded_Length[q4] =
         x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Values_ExplicitBounded_Length[q4 + 1]
         /\
         x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Values_ExplicitBounded_Values[q4, ..] <lex
         x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Values_ExplicitBounded_Values[q4 + 1, ..]
             | q4 : int(1..3)]),
    and([x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Flags[q5] = false ->
         x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Values_ExplicitBounded_Length[q5] = 0 /\
         and([x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Values_ExplicitBounded_Values[q5, q13] = 1
                  | q13 : int(1..4)])
             | q5 : int(1..4)]),
    and([x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Flags[q6 + 1] ->
         x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Flags[q6]
             | q6 : int(1..3)]),
    sum([toInt(x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Flags[q7]) | q7 : int(1..4)]) <= 4,
    and([x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Flags[q8] ->
         and([q9 > x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Values_ExplicitBounded_Length[q8] ->
              x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Values_ExplicitBounded_Values[q8, q9] = 1
                  | q9 : int(1..4)])
             | q8 : int(1..4)]),
    and([x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Flags[q8] ->
         x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Values_ExplicitBounded_Length[q8] <= 4
             | q8 : int(1..4)]),
    4 =
    sum([toInt(x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Flags[q12]) *
         catchUndef(x_PartitionSequenceAsSet_ExplicitVarSizeWithFlagsR14_Values_ExplicitBounded_Length[q12], 0)
             | q12 : int(1..4)])

