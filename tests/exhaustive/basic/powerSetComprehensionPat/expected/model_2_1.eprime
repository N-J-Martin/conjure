language ESSENCE' 1.0

find x_ExplicitVarSizeWithDummy: matrix indexed by [int(1..7)] of int(1..8)
find x_Occurrence: matrix indexed by [int(1..7)] of bool
branching on [x_Occurrence, x_ExplicitVarSizeWithDummy]
such that
    and([x_ExplicitVarSizeWithDummy[q20] != 8 /\ x_ExplicitVarSizeWithDummy[q21] != 8 ->
         |x_ExplicitVarSizeWithDummy[q20] - x_ExplicitVarSizeWithDummy[q21]| >= 3
             | q20 : int(1..7), q21 : int(1..7), q21 > q20]),
    and([x_ExplicitVarSizeWithDummy[q1] < x_ExplicitVarSizeWithDummy[q1 + 1] \/ x_ExplicitVarSizeWithDummy[q1] = 8
             | q1 : int(1..6)]),
    and([x_ExplicitVarSizeWithDummy[q2] = 8 -> x_ExplicitVarSizeWithDummy[q2 + 1] = 8 | q2 : int(1..6)]),
    3 <= sum([toInt(x_ExplicitVarSizeWithDummy[q3] != 8) | q3 : int(1..7)]),
    3 <= sum([toInt(x_Occurrence[q5]) | q5 : int(1..7)]),
    sum([toInt(x_Occurrence[q6]) | q6 : int(1..7)]) =
    sum([toInt(x_ExplicitVarSizeWithDummy[q8] != 8) | q8 : int(1..7)]),
    sum([toInt(x_Occurrence[q12]) | q12 : int(1..7)]) <=
    sum([toInt(x_ExplicitVarSizeWithDummy[q14] != 8) | q14 : int(1..7)]),
    and([x_Occurrence[q9] ->
         or([x_ExplicitVarSizeWithDummy[q11] != 8 /\ x_ExplicitVarSizeWithDummy[q11] = q9 | q11 : int(1..7)])
             | q9 : int(1..7)]),
    sum([toInt(x_ExplicitVarSizeWithDummy[q18] != 8) | q18 : int(1..7)]) <=
    sum([toInt(x_Occurrence[q19]) | q19 : int(1..7)]),
    and([x_ExplicitVarSizeWithDummy[q16] != 8 -> x_Occurrence[x_ExplicitVarSizeWithDummy[q16]] | q16 : int(1..7)])

