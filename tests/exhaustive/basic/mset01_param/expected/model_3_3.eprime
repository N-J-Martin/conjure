language ESSENCE' 1.0

given fin1: int
given g_ExplicitWithFlags_Flags: matrix indexed by [int(1..fin1)] of int(0..2)
given g_ExplicitWithFlags_Values: matrix indexed by [int(1..fin1)] of int(1..2)
find x_MOccurrence: matrix indexed by [int(1..2)] of int(0..2)
branching on [x_MOccurrence]
such that
    fin1 = sum([toInt(x_MOccurrence[q6] > 0) * catchUndef(x_MOccurrence[q6], 0) | q6 : int(1..2)]),
    and([sum([g_ExplicitWithFlags_Flags[q4]
                  | q4 : int(1..fin1), g_ExplicitWithFlags_Values[q4] = g_ExplicitWithFlags_Values[q3]])
         = x_MOccurrence[g_ExplicitWithFlags_Values[q3]]
             | q3 : int(1..fin1), g_ExplicitWithFlags_Flags[q3] > 0]),
    and([x_MOccurrence[q7] > 0 ->
         sum([g_ExplicitWithFlags_Flags[q8] | q8 : int(1..fin1), g_ExplicitWithFlags_Values[q8] = q7]) =
         x_MOccurrence[q7]
             | q7 : int(1..2)]),
    sum([x_MOccurrence[q1] | q1 : int(1..2)]) <= 4

