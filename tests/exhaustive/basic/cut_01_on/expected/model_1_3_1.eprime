language ESSENCE' 1.0

find x_Occurrence: matrix indexed by [int(1..3)] of bool
find x_ExplicitVarSizeWithMarker_Marker: int(0..3)
find x_ExplicitVarSizeWithMarker_Values: matrix indexed by [int(1..3)] of int(1..3)
find cut1: bool
find cut2: bool
branching on [cut1, cut2, x_ExplicitVarSizeWithMarker_Marker, x_ExplicitVarSizeWithMarker_Values, x_Occurrence]
such that
    !cut1 <-> 2 <= sum([toInt(x_Occurrence[q14]) | q14 : int(1..3)]) /\ (x_Occurrence[1] /\ x_Occurrence[2]),
    !cut2 <->
    or([q17 <= x_ExplicitVarSizeWithMarker_Marker /\ x_ExplicitVarSizeWithMarker_Values[q17] = 1 | q17 : int(1..3)]),
    and([q2 + 1 <= x_ExplicitVarSizeWithMarker_Marker ->
         x_ExplicitVarSizeWithMarker_Values[q2] < x_ExplicitVarSizeWithMarker_Values[q2 + 1]
             | q2 : int(1..2)]),
    and([q3 > x_ExplicitVarSizeWithMarker_Marker -> x_ExplicitVarSizeWithMarker_Values[q3] = 1 | q3 : int(1..3)]),
    x_ExplicitVarSizeWithMarker_Marker = sum([toInt(x_Occurrence[q5]) | q5 : int(1..3)]),
    x_ExplicitVarSizeWithMarker_Marker <= sum([toInt(x_Occurrence[q7]) | q7 : int(1..3)]),
    and([q8 <= x_ExplicitVarSizeWithMarker_Marker -> x_Occurrence[x_ExplicitVarSizeWithMarker_Values[q8]]
             | q8 : int(1..3)]),
    sum([toInt(x_Occurrence[q12]) | q12 : int(1..3)]) <= x_ExplicitVarSizeWithMarker_Marker,
    and([x_Occurrence[q9] ->
         or([q11 <= x_ExplicitVarSizeWithMarker_Marker /\ x_ExplicitVarSizeWithMarker_Values[q11] = q9
                 | q11 : int(1..3)])
             | q9 : int(1..3)])

