language ESSENCE' 1.0

find x_ExplicitVarSizeWithDummy: matrix indexed by [int(1..3)] of int(1..4)
find x_Occurrence: matrix indexed by [int(1..3)] of bool
find cut1: bool
find cut2: bool
branching on [cut1, cut2, x_Occurrence, x_ExplicitVarSizeWithDummy]
such that
    !cut1 <->
    2 <= sum([toInt(x_ExplicitVarSizeWithDummy[q8] != 4) | q8 : int(1..3)]) /\
    (or([x_ExplicitVarSizeWithDummy[q10] != 4 /\ x_ExplicitVarSizeWithDummy[q10] = 1 | q10 : int(1..3)]) /\
     or([x_ExplicitVarSizeWithDummy[q12] != 4 /\ x_ExplicitVarSizeWithDummy[q12] = 2 | q12 : int(1..3)])),
    !cut2 <-> or([x_ExplicitVarSizeWithDummy[q14] != 4 /\ x_ExplicitVarSizeWithDummy[q14] = 1 | q14 : int(1..3)]),
    and([x_ExplicitVarSizeWithDummy[q1] < x_ExplicitVarSizeWithDummy[q1 + 1] \/ x_ExplicitVarSizeWithDummy[q1] = 4
             | q1 : int(1..2)]),
    and([x_ExplicitVarSizeWithDummy[q2] = 4 -> x_ExplicitVarSizeWithDummy[q2 + 1] = 4 | q2 : int(1..2)]),
    sum([toInt(x_Occurrence[q15]) | q15 : int(1..3)]) =
    sum([toInt(x_ExplicitVarSizeWithDummy[q17] != 4) | q17 : int(1..3)]),
    sum([toInt(x_Occurrence[q21]) | q21 : int(1..3)]) <=
    sum([toInt(x_ExplicitVarSizeWithDummy[q23] != 4) | q23 : int(1..3)]),
    and([x_Occurrence[q18] ->
         or([x_ExplicitVarSizeWithDummy[q20] != 4 /\ x_ExplicitVarSizeWithDummy[q20] = q18 | q20 : int(1..3)])
             | q18 : int(1..3)]),
    sum([toInt(x_ExplicitVarSizeWithDummy[q27] != 4) | q27 : int(1..3)]) <=
    sum([toInt(x_Occurrence[q28]) | q28 : int(1..3)]),
    and([x_ExplicitVarSizeWithDummy[q25] != 4 -> x_Occurrence[x_ExplicitVarSizeWithDummy[q25]] | q25 : int(1..3)])

