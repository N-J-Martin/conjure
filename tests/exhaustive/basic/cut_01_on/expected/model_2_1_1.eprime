language ESSENCE' 1.0

find x_ExplicitVarSizeWithDummy: matrix indexed by [int(1..3)] of int(1..4)
find x_Occurrence: matrix indexed by [int(1..3)] of bool
find cut1: bool
find cut2: bool
branching on [cut1, cut2, x_Occurrence, x_ExplicitVarSizeWithDummy]
such that
    !cut1 <->
    2 <= sum([toInt(x_ExplicitVarSizeWithDummy[q22] != 4) | q22 : int(1..3)]) /\
    (or([x_ExplicitVarSizeWithDummy[q25] != 4 /\ x_ExplicitVarSizeWithDummy[q25] = 1 | q25 : int(1..3)]) /\
     or([x_ExplicitVarSizeWithDummy[q27] != 4 /\ x_ExplicitVarSizeWithDummy[q27] = 2 | q27 : int(1..3)])),
    !cut2 <-> x_Occurrence[1],
    and([x_ExplicitVarSizeWithDummy[q1] < x_ExplicitVarSizeWithDummy[q1 + 1] \/ x_ExplicitVarSizeWithDummy[q1] = 4
             | q1 : int(1..2)]),
    and([x_ExplicitVarSizeWithDummy[q2] = 4 -> x_ExplicitVarSizeWithDummy[q2 + 1] = 4 | q2 : int(1..2)]),
    sum([toInt(x_Occurrence[q6]) | q6 : int(1..3)]) =
    sum([toInt(x_ExplicitVarSizeWithDummy[q8] != 4) | q8 : int(1..3)]),
    sum([toInt(x_Occurrence[q12]) | q12 : int(1..3)]) <=
    sum([toInt(x_ExplicitVarSizeWithDummy[q14] != 4) | q14 : int(1..3)]),
    and([x_Occurrence[q9] ->
         or([x_ExplicitVarSizeWithDummy[q11] != 4 /\ x_ExplicitVarSizeWithDummy[q11] = q9 | q11 : int(1..3)])
             | q9 : int(1..3)]),
    sum([toInt(x_ExplicitVarSizeWithDummy[q18] != 4) | q18 : int(1..3)]) <=
    sum([toInt(x_Occurrence[q19]) | q19 : int(1..3)]),
    and([x_ExplicitVarSizeWithDummy[q16] != 4 -> x_Occurrence[x_ExplicitVarSizeWithDummy[q16]] | q16 : int(1..3)])

