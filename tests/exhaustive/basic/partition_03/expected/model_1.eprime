language ESSENCE' 1.0

find x_PartitionAsSet_ExplicitVarSizeWithMarkerR2_Marker: int(0..6)
find x_PartitionAsSet_ExplicitVarSizeWithMarkerR2_Values_Occurrence: matrix indexed by [int(1..6), int(1..6)] of bool
such that
    alldifferent_except([toInt(q11 <= x_PartitionAsSet_ExplicitVarSizeWithMarkerR2_Marker /\
                               x_PartitionAsSet_ExplicitVarSizeWithMarkerR2_Values_Occurrence[q11, q2])
                         * catchUndef(q2, 0)
                             | q11 : int(1..6), q2 : int(1..6)],
                        0),
    and([q4 + 1 <= x_PartitionAsSet_ExplicitVarSizeWithMarkerR2_Marker ->
         x_PartitionAsSet_ExplicitVarSizeWithMarkerR2_Values_Occurrence[q4, ..] <lex
         x_PartitionAsSet_ExplicitVarSizeWithMarkerR2_Values_Occurrence[q4 + 1, ..]
             | q4 : int(1..5)]),
    and([q5 > x_PartitionAsSet_ExplicitVarSizeWithMarkerR2_Marker ->
         and([x_PartitionAsSet_ExplicitVarSizeWithMarkerR2_Values_Occurrence[q5, q9] = false | q9 : int(1..6)])
             | q5 : int(1..6)]),
    x_PartitionAsSet_ExplicitVarSizeWithMarkerR2_Marker <= 6,
    and([q6 <= x_PartitionAsSet_ExplicitVarSizeWithMarkerR2_Marker ->
         3 = sum([toInt(x_PartitionAsSet_ExplicitVarSizeWithMarkerR2_Values_Occurrence[q6, q7]) | q7 : int(1..6)])
             | q6 : int(1..6)]),
    6 = sum([toInt(q10 <= x_PartitionAsSet_ExplicitVarSizeWithMarkerR2_Marker) * 3 | q10 : int(1..6)])

