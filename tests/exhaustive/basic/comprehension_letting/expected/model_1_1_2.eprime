language ESSENCE' 1.0

find s_Occurrence: matrix indexed by [int(1..4)] of bool
find s_ExplicitVarSizeWithDummy: matrix indexed by [int(1..4)] of int(1..5)
letting let1 be -100
find x: int(-100..100)
find conjure_aux1: int(-16..3)
branching on [s_ExplicitVarSizeWithDummy, s_Occurrence, x]
such that
    and([s_Occurrence[i] /\ s_Occurrence[j] -> min([i + j, i - j, i * j, i / j; int(1..4)]) <= conjure_aux1
             | i : int(1..4), j : int(1..4), i != j, allDiff([i + j, i * j, i / j; int(1..3)]), (i - j) % 2 = 0]),
    sum([toInt(s_Occurrence[i] /\ s_Occurrence[j])
             | i : int(1..4), j : int(1..4), i != j, allDiff([i + j, i * j, i / j; int(1..3)]), (i - j) % 2 = 0])
    > 0
    ->
    or([s_Occurrence[i] /\ s_Occurrence[j] /\ min([i + j, i - j, i * j, i / j; int(1..4)]) = conjure_aux1
            | i : int(1..4), j : int(1..4), i != j, allDiff([i + j, i * j, i / j; int(1..3)]), (i - j) % 2 = 0]),
    sum([toInt(s_Occurrence[i] /\ s_Occurrence[j])
             | i : int(1..4), j : int(1..4), i != j, allDiff([i + j, i * j, i / j; int(1..3)]), (i - j) % 2 = 0])
    = 0
    -> conjure_aux1 = -16,
    x = conjure_aux1,
    sum([toInt(s_Occurrence[i] /\ s_Occurrence[j])
             | i : int(1..4), j : int(1..4), i != j, allDiff([i + j, i * j, i / j; int(1..3)]), (i - j) % 2 = 0])
    > 0,
    and([s_ExplicitVarSizeWithDummy[q2] < s_ExplicitVarSizeWithDummy[q2 + 1] \/ s_ExplicitVarSizeWithDummy[q2] = 5
             | q2 : int(1..3)]),
    and([s_ExplicitVarSizeWithDummy[q3] = 5 -> s_ExplicitVarSizeWithDummy[q3 + 1] = 5 | q3 : int(1..3)]),
    sum([toInt(s_ExplicitVarSizeWithDummy[q7] != 5) | q7 : int(1..4)]) =
    sum([toInt(s_Occurrence[q8]) | q8 : int(1..4)]),
    sum([toInt(s_ExplicitVarSizeWithDummy[q12] != 5) | q12 : int(1..4)]) <=
    sum([toInt(s_Occurrence[q13]) | q13 : int(1..4)]),
    and([s_ExplicitVarSizeWithDummy[q10] != 5 -> s_Occurrence[s_ExplicitVarSizeWithDummy[q10]] | q10 : int(1..4)]),
    sum([toInt(s_Occurrence[q17]) | q17 : int(1..4)]) <=
    sum([toInt(s_ExplicitVarSizeWithDummy[q19] != 5) | q19 : int(1..4)]),
    and([s_Occurrence[q14] ->
         or([s_ExplicitVarSizeWithDummy[q16] != 5 /\ s_ExplicitVarSizeWithDummy[q16] = q14 | q16 : int(1..4)])
             | q14 : int(1..4)])

