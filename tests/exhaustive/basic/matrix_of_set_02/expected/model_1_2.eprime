language ESSENCE' 1.0

find x_Occurrence: matrix indexed by [int(1..2), int(1..3)] of bool
find x_ExplicitVarSizeWithDummy: matrix indexed by [int(1..2), int(1..3)] of int(1..4)
branching on [x_ExplicitVarSizeWithDummy, x_Occurrence]
such that
    and([x_Occurrence[j, i] -> i % 2 = 0 | j : int(1..2), i : int(1..3)]),
    and([and([x_ExplicitVarSizeWithDummy[q3, q4] < x_ExplicitVarSizeWithDummy[q3, q4 + 1] \/
              x_ExplicitVarSizeWithDummy[q3, q4] = 4
                  | q4 : int(1..2)])
             | q3 : int(1..2)]),
    and([and([x_ExplicitVarSizeWithDummy[q3, q5] = 4 -> x_ExplicitVarSizeWithDummy[q3, q5 + 1] = 4 | q5 : int(1..2)])
             | q3 : int(1..2)]),
    and([sum([toInt(x_ExplicitVarSizeWithDummy[q8, q11] != 4) | q11 : int(1..3)]) =
         sum([toInt(x_Occurrence[q8, q12]) | q12 : int(1..3)])
         /\
         (sum([toInt(x_ExplicitVarSizeWithDummy[q8, q16] != 4) | q16 : int(1..3)]) <=
          sum([toInt(x_Occurrence[q8, q17]) | q17 : int(1..3)])
          /\
          and([x_ExplicitVarSizeWithDummy[q8, q14] != 4 -> x_Occurrence[q8, x_ExplicitVarSizeWithDummy[q8, q14]]
                   | q14 : int(1..3)]))
         /\
         (sum([toInt(x_Occurrence[q8, q21]) | q21 : int(1..3)]) <=
          sum([toInt(x_ExplicitVarSizeWithDummy[q8, q23] != 4) | q23 : int(1..3)])
          /\
          and([x_Occurrence[q8, q18] ->
               or([x_ExplicitVarSizeWithDummy[q8, q20] != 4 /\ x_ExplicitVarSizeWithDummy[q8, q20] = q18
                       | q20 : int(1..3)])
                   | q18 : int(1..3)]))
             | q8 : int(1..2)])

