language ESSENCE' 1.0

find x_FunctionNDPartialDummy: matrix indexed by [int(1..3)] of int(0..3)
find x_Function1DPartial_Flags: matrix indexed by [int(1..3)] of bool
find x_Function1DPartial_Values: matrix indexed by [int(1..3)] of int(1..3)
branching on [x_Function1DPartial_Flags, x_Function1DPartial_Values, x_FunctionNDPartialDummy]
such that
    or([x_FunctionNDPartialDummy[q16] != 0 /\ x_FunctionNDPartialDummy[q16] = 1 | q16 : int(1..3)]),
    or([x_FunctionNDPartialDummy[q19] != 0 /\ x_FunctionNDPartialDummy[q19] = 2 | q19 : int(1..3)]),
    and([x_FunctionNDPartialDummy[q22] != 0 -> 1 = x_FunctionNDPartialDummy[q22] \/ 2 = x_FunctionNDPartialDummy[q22]
             | q22 : int(1..3)]),
    and([x_Function1DPartial_Flags[q3] = false -> x_Function1DPartial_Values[q3] = 1 | q3 : int(1..3)]),
    sum([toInt(x_Function1DPartial_Flags[q9]) | q9 : int(1..3)]) =
    sum([toInt(x_FunctionNDPartialDummy[q11] != 0) | q11 : int(1..3)]),
    and([x_Function1DPartial_Flags[q7] -> x_FunctionNDPartialDummy[q7] = x_Function1DPartial_Values[q7]
             | q7 : int(1..3)]),
    and([x_FunctionNDPartialDummy[q12] != 0 ->
         x_Function1DPartial_Values[q12] = x_FunctionNDPartialDummy[q12] /\ x_Function1DPartial_Flags[q12]
             | q12 : int(1..3)])

