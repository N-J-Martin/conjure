language ESSENCE' 1.0

find x_ExplicitR6_ExplicitVarSizeWithDummy: matrix indexed by [int(1..2), int(1..3)] of int(1..3)
find x_ExplicitR4_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..2), int(1..3)] of bool
find x_ExplicitR4_ExplicitVarSizeWithFlags_Values: matrix indexed by [int(1..2), int(1..3)] of int(1..2)
branching on
    [x_ExplicitR4_ExplicitVarSizeWithFlags_Flags, x_ExplicitR4_ExplicitVarSizeWithFlags_Values,
     x_ExplicitR6_ExplicitVarSizeWithDummy]
such that
    x_ExplicitR6_ExplicitVarSizeWithDummy[1, ..] <lex x_ExplicitR6_ExplicitVarSizeWithDummy[2, ..],
    and([and([x_ExplicitR6_ExplicitVarSizeWithDummy[q2, q3] < x_ExplicitR6_ExplicitVarSizeWithDummy[q2, q3 + 1] \/
              x_ExplicitR6_ExplicitVarSizeWithDummy[q2, q3] = 3
                  | q3 : int(1..2)])
             | q2 : int(1..2)]),
    and([and([x_ExplicitR6_ExplicitVarSizeWithDummy[q2, q4] = 3 -> x_ExplicitR6_ExplicitVarSizeWithDummy[q2, q4 + 1] = 3
                  | q4 : int(1..2)])
             | q2 : int(1..2)]),
    and([sum([toInt(x_ExplicitR6_ExplicitVarSizeWithDummy[q2, q5] != 3) | q5 : int(1..3)]) <= 3 | q2 : int(1..2)]),
    flatten([[toInt(x_ExplicitR4_ExplicitVarSizeWithFlags_Flags[1, q14]) | q14 : int(1..3)],
             x_ExplicitR4_ExplicitVarSizeWithFlags_Values[1, ..];
                 int(1..2)])
    <lex
    flatten([[toInt(x_ExplicitR4_ExplicitVarSizeWithFlags_Flags[2, q15]) | q15 : int(1..3)],
             x_ExplicitR4_ExplicitVarSizeWithFlags_Values[2, ..];
                 int(1..2)]),
    and([and([x_ExplicitR4_ExplicitVarSizeWithFlags_Flags[q8, q9 + 1] ->
              x_ExplicitR4_ExplicitVarSizeWithFlags_Values[q8, q9] <
              x_ExplicitR4_ExplicitVarSizeWithFlags_Values[q8, q9 + 1]
                  | q9 : int(1..2)])
             | q8 : int(1..2)]),
    and([and([x_ExplicitR4_ExplicitVarSizeWithFlags_Flags[q8, q10] = false ->
              x_ExplicitR4_ExplicitVarSizeWithFlags_Values[q8, q10] = 1
                  | q10 : int(1..3)])
             | q8 : int(1..2)]),
    and([and([x_ExplicitR4_ExplicitVarSizeWithFlags_Flags[q8, q11 + 1] ->
              x_ExplicitR4_ExplicitVarSizeWithFlags_Flags[q8, q11]
                  | q11 : int(1..2)])
             | q8 : int(1..2)]),
    and([sum([toInt(x_ExplicitR4_ExplicitVarSizeWithFlags_Flags[q8, q12]) | q12 : int(1..3)]) <= 3 | q8 : int(1..2)]),
    and([or([and([x_ExplicitR6_ExplicitVarSizeWithDummy[q19, q21] != 3 ->
                  or([x_ExplicitR4_ExplicitVarSizeWithFlags_Flags[q17, q23] /\
                      x_ExplicitR4_ExplicitVarSizeWithFlags_Values[q17, q23] =
                      x_ExplicitR6_ExplicitVarSizeWithDummy[q19, q21]
                          | q23 : int(1..3)])
                      | q21 : int(1..3)])
             /\
             and([x_ExplicitR4_ExplicitVarSizeWithFlags_Flags[q17, q25] ->
                  or([x_ExplicitR6_ExplicitVarSizeWithDummy[q19, q27] != 3 /\
                      x_ExplicitR6_ExplicitVarSizeWithDummy[q19, q27] =
                      x_ExplicitR4_ExplicitVarSizeWithFlags_Values[q17, q25]
                          | q27 : int(1..3)])
                      | q25 : int(1..3)])
                 | q19 : int(1..2)])
             | q17 : int(1..2)]),
    and([or([and([x_ExplicitR4_ExplicitVarSizeWithFlags_Flags[q31, q33] ->
                  or([x_ExplicitR6_ExplicitVarSizeWithDummy[q29, q35] != 3 /\
                      x_ExplicitR6_ExplicitVarSizeWithDummy[q29, q35] =
                      x_ExplicitR4_ExplicitVarSizeWithFlags_Values[q31, q33]
                          | q35 : int(1..3)])
                      | q33 : int(1..3)])
             /\
             and([x_ExplicitR6_ExplicitVarSizeWithDummy[q29, q37] != 3 ->
                  or([x_ExplicitR4_ExplicitVarSizeWithFlags_Flags[q31, q39] /\
                      x_ExplicitR4_ExplicitVarSizeWithFlags_Values[q31, q39] =
                      x_ExplicitR6_ExplicitVarSizeWithDummy[q29, q37]
                          | q39 : int(1..3)])
                      | q37 : int(1..3)])
                 | q31 : int(1..2)])
             | q29 : int(1..2)])

