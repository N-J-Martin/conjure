language ESSENCE' 1.0

given n: int
given a: int
given b: int
find x_Occurrence: matrix indexed by [int(a..b)] of bool
find x_ExplicitVarSizeWithDummy: matrix indexed by [int(1..1 + (b - a))] of int(a..b + 1)
such that
    and([and([x_Occurrence[t_ExplicitVarSizeWithMarker_Values[q15]]
                  | q15 : int(1..1 + (b - a)), q15 <= t_ExplicitVarSizeWithMarker_Marker])
         ->
         sum([t_ExplicitVarSizeWithMarker_Values[q16]
                  | q16 : int(1..1 + (b - a)), q16 <= t_ExplicitVarSizeWithMarker_Marker])
         <= 6
             | t_ExplicitVarSizeWithMarker_Marker : int(0..1 + (b - a)),
               t_ExplicitVarSizeWithMarker_Values : matrix indexed by [int(1..1 + (b - a))] of int(a..b),
               and([q11 + 1 <= t_ExplicitVarSizeWithMarker_Marker ->
                    t_ExplicitVarSizeWithMarker_Values[q11] < t_ExplicitVarSizeWithMarker_Values[q11 + 1]
                        | q11 : int(1..1 + (b - a) - 1)]),
               and([q12 > t_ExplicitVarSizeWithMarker_Marker -> t_ExplicitVarSizeWithMarker_Values[q12] = a
                        | q12 : int(1..1 + (b - a))])]),
    n <= sum([toInt(x_Occurrence[q1]) | q1 : int(a..b)]),
    and([x_ExplicitVarSizeWithDummy[q2] < x_ExplicitVarSizeWithDummy[q2 + 1] \/ x_ExplicitVarSizeWithDummy[q2] = b + 1
             | q2 : int(1..1 + (b - a) - 1)]),
    and([x_ExplicitVarSizeWithDummy[q3] = b + 1 -> x_ExplicitVarSizeWithDummy[q3 + 1] = b + 1
             | q3 : int(1..1 + (b - a) - 1)]),
    n <= sum([toInt(x_ExplicitVarSizeWithDummy[q4] != b + 1) | q4 : int(1..1 + (b - a))]),
    and([x_ExplicitVarSizeWithDummy[q7] != b + 1 -> x_Occurrence[x_ExplicitVarSizeWithDummy[q7]]
             | q7 : int(1..1 + (b - a))]),
    and([x_Occurrence[q8] ->
         or([x_ExplicitVarSizeWithDummy[q10] != b + 1 /\ x_ExplicitVarSizeWithDummy[q10] = q8
                 | q10 : int(1..1 + (b - a))])
             | q8 : int(a..b)])

