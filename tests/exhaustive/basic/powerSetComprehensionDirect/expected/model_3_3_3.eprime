language ESSENCE' 1.0

given n: int
given a: int
given b: int
find x_ExplicitVarSizeWithMarker_Marker: int(0..1 + (b - a))
find x_ExplicitVarSizeWithMarker_Values: matrix indexed by [int(1..1 + (b - a))] of int(a..b)
such that
    and([and([or([q10 <= x_ExplicitVarSizeWithMarker_Marker /\
                  x_ExplicitVarSizeWithMarker_Values[q10] = t_ExplicitVarSizeWithMarker_Values[q8]
                      | q10 : int(1..1 + (b - a))])
                  | q8 : int(1..1 + (b - a)), q8 <= t_ExplicitVarSizeWithMarker_Marker])
         ->
         sum([t_ExplicitVarSizeWithMarker_Values[q11]
                  | q11 : int(1..1 + (b - a)), q11 <= t_ExplicitVarSizeWithMarker_Marker])
         <= 6
             | t_ExplicitVarSizeWithMarker_Marker : int(0..1 + (b - a)),
               t_ExplicitVarSizeWithMarker_Values : matrix indexed by [int(1..1 + (b - a))] of int(a..b),
               and([q4 + 1 <= t_ExplicitVarSizeWithMarker_Marker ->
                    t_ExplicitVarSizeWithMarker_Values[q4] < t_ExplicitVarSizeWithMarker_Values[q4 + 1]
                        | q4 : int(1..1 + (b - a) - 1)]),
               and([q5 > t_ExplicitVarSizeWithMarker_Marker -> t_ExplicitVarSizeWithMarker_Values[q5] = a
                        | q5 : int(1..1 + (b - a))])]),
    and([q1 + 1 <= x_ExplicitVarSizeWithMarker_Marker ->
         x_ExplicitVarSizeWithMarker_Values[q1] < x_ExplicitVarSizeWithMarker_Values[q1 + 1]
             | q1 : int(1..1 + (b - a) - 1)]),
    and([q2 > x_ExplicitVarSizeWithMarker_Marker -> x_ExplicitVarSizeWithMarker_Values[q2] = a
             | q2 : int(1..1 + (b - a))]),
    n <= x_ExplicitVarSizeWithMarker_Marker

