language ESSENCE' 1.0

letting n be 3
find p_PermutationAsFunction_PermutationFunction_Function1D: matrix indexed by [int(1..3)] of int(1..3)
branching on [p_PermutationAsFunction_PermutationFunction_Function1D]
such that
    allDiff(p_PermutationAsFunction_PermutationFunction_Function1D),
    and([or([p_PermutationAsFunction_PermutationFunction_Function1D[q3] = q2 | q3 : int(1..3)]) | q2 : int(1..3)]),
    2 <= sum([toInt(q1 != p_PermutationAsFunction_PermutationFunction_Function1D[q1]) | q1 : int(1..3)])

