language ESSENCE' 1.0

find p_PermutationAsFunction_PermutationFunction_Function1D: matrix indexed by [int(1..4)] of int(1..4)
branching on [p_PermutationAsFunction_PermutationFunction_Function1D]
such that
    and([q11 != p_PermutationAsFunction_PermutationFunction_Function1D[q11] ->
         q11 != p_PermutationAsFunction_PermutationFunction_Function1D[q11]
             | q11 : int(1..4)]),
    allDiff(p_PermutationAsFunction_PermutationFunction_Function1D),
    and([or([p_PermutationAsFunction_PermutationFunction_Function1D[q3] = q2 | q3 : int(1..4)]) | q2 : int(1..4)]),
    3 = sum([toInt(q1 != p_PermutationAsFunction_PermutationFunction_Function1D[q1]) | q1 : int(1..4)])

