language ESSENCE' 1.0

find x_ExplicitVarSizeWithMarker_Marker: int(0..4)
find x_ExplicitVarSizeWithMarker_Values: matrix indexed by [int(1..4)] of int(2..5)
find x_Occurrence: matrix indexed by [int(2..5)] of bool
find y_Occurrence: matrix indexed by [int(2..5)] of bool
branching on [x_Occurrence, x_ExplicitVarSizeWithMarker_Marker, x_ExplicitVarSizeWithMarker_Values, y_Occurrence]
such that
    and([q14 <= x_ExplicitVarSizeWithMarker_Marker /\ y_Occurrence[j] -> x_ExplicitVarSizeWithMarker_Values[q14] + 2 = j
             | q14 : int(1..4), j : int(2..5)]),
    and([q1 + 1 <= x_ExplicitVarSizeWithMarker_Marker ->
         x_ExplicitVarSizeWithMarker_Values[q1] < x_ExplicitVarSizeWithMarker_Values[q1 + 1]
             | q1 : int(1..3)]),
    and([q2 > x_ExplicitVarSizeWithMarker_Marker -> x_ExplicitVarSizeWithMarker_Values[q2] = 2 | q2 : int(1..4)]),
    1 <= x_ExplicitVarSizeWithMarker_Marker,
    1 <= sum([toInt(y_Occurrence[q4]) | q4 : int(2..5)]),
    1 <= sum([toInt(x_Occurrence[q5]) | q5 : int(2..5)]),
    sum([toInt(x_Occurrence[q6]) | q6 : int(2..5)]) = x_ExplicitVarSizeWithMarker_Marker,
    sum([toInt(x_Occurrence[q10]) | q10 : int(2..5)]) <= x_ExplicitVarSizeWithMarker_Marker,
    and([x_Occurrence[q7] ->
         or([q9 <= x_ExplicitVarSizeWithMarker_Marker /\ x_ExplicitVarSizeWithMarker_Values[q9] = q7 | q9 : int(1..4)])
             | q7 : int(2..5)]),
    x_ExplicitVarSizeWithMarker_Marker <= sum([toInt(x_Occurrence[q12]) | q12 : int(2..5)]),
    and([q13 <= x_ExplicitVarSizeWithMarker_Marker -> x_Occurrence[x_ExplicitVarSizeWithMarker_Values[q13]]
             | q13 : int(1..4)])

