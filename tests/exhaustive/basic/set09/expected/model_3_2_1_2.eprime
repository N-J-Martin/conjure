language ESSENCE' 1.0

find x_ExplicitVarSizeWithMarker_Marker: int(0..4)
find x_ExplicitVarSizeWithMarker_Values: matrix indexed by [int(1..4)] of int(2..5)
find x_Occurrence: matrix indexed by [int(2..5)] of bool
find y_ExplicitVarSizeWithDummy: matrix indexed by [int(1..4)] of int(2..6)
branching on
    [x_Occurrence, x_ExplicitVarSizeWithMarker_Marker, x_ExplicitVarSizeWithMarker_Values, y_ExplicitVarSizeWithDummy]
such that
    and([q17 <= x_ExplicitVarSizeWithMarker_Marker /\ y_ExplicitVarSizeWithDummy[q18] != 6 ->
         x_ExplicitVarSizeWithMarker_Values[q17] + 2 = y_ExplicitVarSizeWithDummy[q18]
             | q17 : int(1..4), q18 : int(1..4)]),
    and([q1 + 1 <= x_ExplicitVarSizeWithMarker_Marker ->
         x_ExplicitVarSizeWithMarker_Values[q1] < x_ExplicitVarSizeWithMarker_Values[q1 + 1]
             | q1 : int(1..3)]),
    and([q2 > x_ExplicitVarSizeWithMarker_Marker -> x_ExplicitVarSizeWithMarker_Values[q2] = 2 | q2 : int(1..4)]),
    1 <= x_ExplicitVarSizeWithMarker_Marker,
    and([y_ExplicitVarSizeWithDummy[q4] < y_ExplicitVarSizeWithDummy[q4 + 1] \/ y_ExplicitVarSizeWithDummy[q4] = 6
             | q4 : int(1..3)]),
    and([y_ExplicitVarSizeWithDummy[q5] = 6 -> y_ExplicitVarSizeWithDummy[q5 + 1] = 6 | q5 : int(1..3)]),
    1 <= sum([toInt(y_ExplicitVarSizeWithDummy[q6] != 6) | q6 : int(1..4)]),
    1 <= sum([toInt(x_Occurrence[q8]) | q8 : int(2..5)]),
    sum([toInt(x_Occurrence[q9]) | q9 : int(2..5)]) = x_ExplicitVarSizeWithMarker_Marker,
    sum([toInt(x_Occurrence[q13]) | q13 : int(2..5)]) <= x_ExplicitVarSizeWithMarker_Marker,
    and([x_Occurrence[q10] ->
         or([q12 <= x_ExplicitVarSizeWithMarker_Marker /\ x_ExplicitVarSizeWithMarker_Values[q12] = q10
                 | q12 : int(1..4)])
             | q10 : int(2..5)]),
    x_ExplicitVarSizeWithMarker_Marker <= sum([toInt(x_Occurrence[q15]) | q15 : int(2..5)]),
    and([q16 <= x_ExplicitVarSizeWithMarker_Marker -> x_Occurrence[x_ExplicitVarSizeWithMarker_Values[q16]]
             | q16 : int(1..4)])

