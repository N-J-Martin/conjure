language ESSENCE' 1.0

find x_ExplicitVarSizeWithDummy: matrix indexed by [int(1..4)] of int(2..6)
find y_Occurrence: matrix indexed by [int(2..5)] of bool
find y_ExplicitVarSizeWithDummy: matrix indexed by [int(1..4)] of int(2..6)
branching on [x_ExplicitVarSizeWithDummy, y_ExplicitVarSizeWithDummy, y_Occurrence]
such that
    and([x_ExplicitVarSizeWithDummy[q24] != 6 /\ y_Occurrence[j] -> x_ExplicitVarSizeWithDummy[q24] + 2 = j
             | q24 : int(1..4), j : int(2..5)]),
    and([x_ExplicitVarSizeWithDummy[q1] < x_ExplicitVarSizeWithDummy[q1 + 1] \/ x_ExplicitVarSizeWithDummy[q1] = 6
             | q1 : int(1..3)]),
    and([x_ExplicitVarSizeWithDummy[q2] = 6 -> x_ExplicitVarSizeWithDummy[q2 + 1] = 6 | q2 : int(1..3)]),
    1 <= sum([toInt(x_ExplicitVarSizeWithDummy[q3] != 6) | q3 : int(1..4)]),
    1 <= sum([toInt(y_Occurrence[q5]) | q5 : int(2..5)]),
    and([y_ExplicitVarSizeWithDummy[q6] < y_ExplicitVarSizeWithDummy[q6 + 1] \/ y_ExplicitVarSizeWithDummy[q6] = 6
             | q6 : int(1..3)]),
    and([y_ExplicitVarSizeWithDummy[q7] = 6 -> y_ExplicitVarSizeWithDummy[q7 + 1] = 6 | q7 : int(1..3)]),
    1 <= sum([toInt(y_ExplicitVarSizeWithDummy[q8] != 6) | q8 : int(1..4)]),
    sum([toInt(y_ExplicitVarSizeWithDummy[q11] != 6) | q11 : int(1..4)]) =
    sum([toInt(y_Occurrence[q12]) | q12 : int(2..5)]),
    sum([toInt(y_ExplicitVarSizeWithDummy[q16] != 6) | q16 : int(1..4)]) <=
    sum([toInt(y_Occurrence[q17]) | q17 : int(2..5)]),
    and([y_ExplicitVarSizeWithDummy[q14] != 6 -> y_Occurrence[y_ExplicitVarSizeWithDummy[q14]] | q14 : int(1..4)]),
    sum([toInt(y_Occurrence[q21]) | q21 : int(2..5)]) <=
    sum([toInt(y_ExplicitVarSizeWithDummy[q23] != 6) | q23 : int(1..4)]),
    and([y_Occurrence[q18] ->
         or([y_ExplicitVarSizeWithDummy[q20] != 6 /\ y_ExplicitVarSizeWithDummy[q20] = q18 | q20 : int(1..4)])
             | q18 : int(2..5)])

