language ESSENCE' 1.0

find x_ExplicitVarSizeWithMarker_Marker: int(0..4)
find x_ExplicitVarSizeWithMarker_Values: matrix indexed by [int(1..4)] of int(2..5)
find y_Occurrence: matrix indexed by [int(2..5)] of bool
find y_ExplicitVarSizeWithDummy: matrix indexed by [int(1..4)] of int(2..6)
branching on
    [x_ExplicitVarSizeWithMarker_Marker, x_ExplicitVarSizeWithMarker_Values, y_ExplicitVarSizeWithDummy, y_Occurrence]
such that
    and([q23 <= x_ExplicitVarSizeWithMarker_Marker /\ y_Occurrence[j] -> x_ExplicitVarSizeWithMarker_Values[q23] + 2 = j
             | q23 : int(1..4), j : int(2..5)]),
    and([q1 + 1 <= x_ExplicitVarSizeWithMarker_Marker ->
         x_ExplicitVarSizeWithMarker_Values[q1] < x_ExplicitVarSizeWithMarker_Values[q1 + 1]
             | q1 : int(1..3)]),
    and([q2 > x_ExplicitVarSizeWithMarker_Marker -> x_ExplicitVarSizeWithMarker_Values[q2] = 2 | q2 : int(1..4)]),
    1 <= x_ExplicitVarSizeWithMarker_Marker,
    1 <= sum([toInt(y_Occurrence[q4]) | q4 : int(2..5)]),
    and([y_ExplicitVarSizeWithDummy[q5] < y_ExplicitVarSizeWithDummy[q5 + 1] \/ y_ExplicitVarSizeWithDummy[q5] = 6
             | q5 : int(1..3)]),
    and([y_ExplicitVarSizeWithDummy[q6] = 6 -> y_ExplicitVarSizeWithDummy[q6 + 1] = 6 | q6 : int(1..3)]),
    1 <= sum([toInt(y_ExplicitVarSizeWithDummy[q7] != 6) | q7 : int(1..4)]),
    sum([toInt(y_ExplicitVarSizeWithDummy[q10] != 6) | q10 : int(1..4)]) =
    sum([toInt(y_Occurrence[q11]) | q11 : int(2..5)]),
    sum([toInt(y_ExplicitVarSizeWithDummy[q15] != 6) | q15 : int(1..4)]) <=
    sum([toInt(y_Occurrence[q16]) | q16 : int(2..5)]),
    and([y_ExplicitVarSizeWithDummy[q13] != 6 -> y_Occurrence[y_ExplicitVarSizeWithDummy[q13]] | q13 : int(1..4)]),
    sum([toInt(y_Occurrence[q20]) | q20 : int(2..5)]) <=
    sum([toInt(y_ExplicitVarSizeWithDummy[q22] != 6) | q22 : int(1..4)]),
    and([y_Occurrence[q17] ->
         or([y_ExplicitVarSizeWithDummy[q19] != 6 /\ y_ExplicitVarSizeWithDummy[q19] = q17 | q19 : int(1..4)])
             | q17 : int(2..5)])

