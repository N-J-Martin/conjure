language ESSENCE' 1.0

find f_Function1DPartial_Flags: matrix indexed by [int(1..2)] of bool
find f_Function1DPartial_Values: matrix indexed by [int(1..2)] of int(1..2)
find s_Occurrence: matrix indexed by [int(1..2)] of bool
find s_Explicit: matrix indexed by [int(1)] of int(1..2)
find aux1: matrix indexed by [int(1)] of int(1..2)
find aux2: matrix indexed by [int(1)] of int(1..2)
such that
    and([s_Occurrence[q16] -> f_Function1DPartial_Flags[q16] | q16 : int(1..2)]),
    and([s_Occurrence[q13] -> q13 >= aux1[1] | q13 : int(1..2)]),
    or([s_Occurrence[q13] /\ q13 = aux1[1] | q13 : int(1..2)]),
    and([s_Occurrence[q14] -> q14 >= aux2[1] | q14 : int(1..2)]),
    or([s_Occurrence[q14] /\ q14 = aux2[1] | q14 : int(1..2)]),
    s_Explicit[1] != s_Explicit[1] ->
    and([f_Function1DPartial_Values[s_Explicit[1]] > f_Function1DPartial_Values[aux1[1]],
         f_Function1DPartial_Flags[s_Explicit[1]], f_Function1DPartial_Flags[aux2[1]];
             int(1..3)]),
    1 = sum([toInt(s_Occurrence[q1]) | q1 : int(1..2)]),
    and([f_Function1DPartial_Flags[q2] = false -> f_Function1DPartial_Values[q2] = 1 | q2 : int(1..2)]),
    s_Occurrence[s_Explicit[1]],
    and([s_Occurrence[q9] -> s_Explicit[1] = q9 | q9 : int(1..2)])

