language ESSENCE' 1.0

find f_Function1DPartial_Flags: matrix indexed by [int(1..2)] of bool
find f_Function1DPartial_Values: matrix indexed by [int(1..2)] of int(1..2)
find s_ExplicitVarSizeWithDummy: matrix indexed by [int(1..3)] of int(1..4)
branching on [f_Function1DPartial_Flags, f_Function1DPartial_Values, s_ExplicitVarSizeWithDummy]
such that
    and([sum([toInt(f_Function1DPartial_Flags[q10]) | q10 : int(1..2), q10 = i]) =
         sum([toInt(s_ExplicitVarSizeWithDummy[q12] != 4) | q12 : int(1..3)])
         /\
         (sum([toInt(f_Function1DPartial_Flags[q16]) | q16 : int(1..2), q16 = i]) <=
          sum([toInt(s_ExplicitVarSizeWithDummy[q18] != 4) | q18 : int(1..3)])
          /\
          and([f_Function1DPartial_Flags[q20] ->
               or([s_ExplicitVarSizeWithDummy[q22] != 4 /\
                   s_ExplicitVarSizeWithDummy[q22] = f_Function1DPartial_Values[q20]
                       | q22 : int(1..3)])
                   | q20 : int(1..2), q20 = i]))
         /\
         (sum([toInt(s_ExplicitVarSizeWithDummy[q29] != 4) | q29 : int(1..3)]) <=
          sum([toInt(f_Function1DPartial_Flags[q32]) | q32 : int(1..2), q32 = i])
          /\
          and([s_ExplicitVarSizeWithDummy[q24] != 4 ->
               or([f_Function1DPartial_Flags[q27] /\ f_Function1DPartial_Values[q27] = s_ExplicitVarSizeWithDummy[q24]
                       | q27 : int(1..2), q27 = i])
                   | q24 : int(1..3)]))
             | i : int(1..2)]),
    and([f_Function1DPartial_Flags[q1] = false -> f_Function1DPartial_Values[q1] = 1 | q1 : int(1..2)]),
    and([s_ExplicitVarSizeWithDummy[q4] < s_ExplicitVarSizeWithDummy[q4 + 1] \/ s_ExplicitVarSizeWithDummy[q4] = 4
             | q4 : int(1..2)]),
    and([s_ExplicitVarSizeWithDummy[q5] = 4 -> s_ExplicitVarSizeWithDummy[q5 + 1] = 4 | q5 : int(1..2)])

