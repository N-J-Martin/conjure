language ESSENCE' 1.0

find f_Function1DPartial_Flags: matrix indexed by [int(1..2)] of bool
find f_Function1DPartial_Values: matrix indexed by [int(1..2)] of int(1..2)
find s_ExplicitVarSizeWithMarker_Marker: int(0..3)
find s_ExplicitVarSizeWithMarker_Values: matrix indexed by [int(1..3)] of int(1..3)
find s_Occurrence: matrix indexed by [int(1..3)] of bool
branching on
    [f_Function1DPartial_Flags, f_Function1DPartial_Values, s_Occurrence, s_ExplicitVarSizeWithMarker_Marker,
     s_ExplicitVarSizeWithMarker_Values]
such that
    and([sum([toInt(f_Function1DPartial_Flags[q18]) | q18 : int(1..2), q18 = i]) = s_ExplicitVarSizeWithMarker_Marker /\
         (sum([toInt(f_Function1DPartial_Flags[q22]) | q22 : int(1..2), q22 = i]) <= s_ExplicitVarSizeWithMarker_Marker
          /\
          and([f_Function1DPartial_Flags[q24] ->
               or([q26 <= s_ExplicitVarSizeWithMarker_Marker /\
                   s_ExplicitVarSizeWithMarker_Values[q26] = f_Function1DPartial_Values[q24]
                       | q26 : int(1..3)])
                   | q24 : int(1..2), q24 = i]))
         /\
         (s_ExplicitVarSizeWithMarker_Marker <= sum([toInt(f_Function1DPartial_Flags[q30]) | q30 : int(1..2), q30 = i])
          /\
          and([q31 <= s_ExplicitVarSizeWithMarker_Marker ->
               or([f_Function1DPartial_Flags[q34] /\
                   f_Function1DPartial_Values[q34] = s_ExplicitVarSizeWithMarker_Values[q31]
                       | q34 : int(1..2), q34 = i])
                   | q31 : int(1..3)]))
             | i : int(1..2)]),
    and([f_Function1DPartial_Flags[q1] = false -> f_Function1DPartial_Values[q1] = 1 | q1 : int(1..2)]),
    and([q4 + 1 <= s_ExplicitVarSizeWithMarker_Marker ->
         s_ExplicitVarSizeWithMarker_Values[q4] < s_ExplicitVarSizeWithMarker_Values[q4 + 1]
             | q4 : int(1..2)]),
    and([q5 > s_ExplicitVarSizeWithMarker_Marker -> s_ExplicitVarSizeWithMarker_Values[q5] = 1 | q5 : int(1..3)]),
    sum([toInt(s_Occurrence[q8]) | q8 : int(1..3)]) = s_ExplicitVarSizeWithMarker_Marker,
    sum([toInt(s_Occurrence[q12]) | q12 : int(1..3)]) <= s_ExplicitVarSizeWithMarker_Marker,
    and([s_Occurrence[q9] ->
         or([q11 <= s_ExplicitVarSizeWithMarker_Marker /\ s_ExplicitVarSizeWithMarker_Values[q11] = q9
                 | q11 : int(1..3)])
             | q9 : int(1..3)]),
    s_ExplicitVarSizeWithMarker_Marker <= sum([toInt(s_Occurrence[q14]) | q14 : int(1..3)]),
    and([q15 <= s_ExplicitVarSizeWithMarker_Marker -> s_Occurrence[s_ExplicitVarSizeWithMarker_Values[q15]]
             | q15 : int(1..3)])

