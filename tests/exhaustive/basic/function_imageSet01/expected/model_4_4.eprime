language ESSENCE' 1.0

find f_Function1DPartial_Flags: matrix indexed by [int(1..2)] of bool
find f_Function1DPartial_Values: matrix indexed by [int(1..2)] of int(1..2)
find s_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..3)] of bool
find s_ExplicitVarSizeWithFlags_Values: matrix indexed by [int(1..3)] of int(1..3)
branching on
    [f_Function1DPartial_Flags, f_Function1DPartial_Values, s_ExplicitVarSizeWithFlags_Flags,
     s_ExplicitVarSizeWithFlags_Values]
such that
    and([sum([toInt(f_Function1DPartial_Flags[q11]) | q11 : int(1..2), q11 = i]) =
         sum([toInt(s_ExplicitVarSizeWithFlags_Flags[q13]) | q13 : int(1..3)])
         /\
         (sum([toInt(f_Function1DPartial_Flags[q17]) | q17 : int(1..2), q17 = i]) <=
          sum([toInt(s_ExplicitVarSizeWithFlags_Flags[q19]) | q19 : int(1..3)])
          /\
          and([f_Function1DPartial_Flags[q21] ->
               or([s_ExplicitVarSizeWithFlags_Flags[q23] /\
                   s_ExplicitVarSizeWithFlags_Values[q23] = f_Function1DPartial_Values[q21]
                       | q23 : int(1..3)])
                   | q21 : int(1..2), q21 = i]))
         /\
         (sum([toInt(s_ExplicitVarSizeWithFlags_Flags[q30]) | q30 : int(1..3)]) <=
          sum([toInt(f_Function1DPartial_Flags[q33]) | q33 : int(1..2), q33 = i])
          /\
          and([s_ExplicitVarSizeWithFlags_Flags[q25] ->
               or([f_Function1DPartial_Flags[q28] /\
                   f_Function1DPartial_Values[q28] = s_ExplicitVarSizeWithFlags_Values[q25]
                       | q28 : int(1..2), q28 = i])
                   | q25 : int(1..3)]))
             | i : int(1..2)]),
    and([f_Function1DPartial_Flags[q1] = false -> f_Function1DPartial_Values[q1] = 1 | q1 : int(1..2)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q4 + 1] ->
         s_ExplicitVarSizeWithFlags_Values[q4] < s_ExplicitVarSizeWithFlags_Values[q4 + 1]
             | q4 : int(1..2)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q5] = false -> s_ExplicitVarSizeWithFlags_Values[q5] = 1 | q5 : int(1..3)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q6 + 1] -> s_ExplicitVarSizeWithFlags_Flags[q6] | q6 : int(1..2)])

