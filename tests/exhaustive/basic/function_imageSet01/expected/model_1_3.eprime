language ESSENCE' 1.0

find f_Function1DPartial_Flags: matrix indexed by [int(1..2)] of bool
find f_Function1DPartial_Values: matrix indexed by [int(1..2)] of int(1..2)
find s_Occurrence: matrix indexed by [int(1..3)] of bool
find s_ExplicitVarSizeWithMarker_Marker: int(0..3)
find s_ExplicitVarSizeWithMarker_Values: matrix indexed by [int(1..3)] of int(1..3)
branching on
    [f_Function1DPartial_Flags, f_Function1DPartial_Values, s_ExplicitVarSizeWithMarker_Marker,
     s_ExplicitVarSizeWithMarker_Values, s_Occurrence]
such that
    and([sum([toInt(f_Function1DPartial_Flags[q18]) | q18 : int(1..2), q18 = i]) =
         sum([toInt(s_Occurrence[q19]) | q19 : int(1..3)])
         /\
         (sum([toInt(f_Function1DPartial_Flags[q25]) | q25 : int(1..2), q25 = i]) <=
          sum([toInt(s_Occurrence[q26]) | q26 : int(1..3)])
          /\
          and([f_Function1DPartial_Flags[q22] -> s_Occurrence[f_Function1DPartial_Values[q22]]
                   | q22 : int(1..2), q22 = i]))
         /\
         (sum([toInt(s_Occurrence[q31]) | q31 : int(1..3)]) <=
          sum([toInt(f_Function1DPartial_Flags[q34]) | q34 : int(1..2), q34 = i])
          /\
          and([s_Occurrence[q27] ->
               or([f_Function1DPartial_Flags[q30] /\ f_Function1DPartial_Values[q30] = q27 | q30 : int(1..2), q30 = i])
                   | q27 : int(1..3)]))
             | i : int(1..2)]),
    and([f_Function1DPartial_Flags[q1] = false -> f_Function1DPartial_Values[q1] = 1 | q1 : int(1..2)]),
    and([q5 + 1 <= s_ExplicitVarSizeWithMarker_Marker ->
         s_ExplicitVarSizeWithMarker_Values[q5] < s_ExplicitVarSizeWithMarker_Values[q5 + 1]
             | q5 : int(1..2)]),
    and([q6 > s_ExplicitVarSizeWithMarker_Marker -> s_ExplicitVarSizeWithMarker_Values[q6] = 1 | q6 : int(1..3)]),
    s_ExplicitVarSizeWithMarker_Marker = sum([toInt(s_Occurrence[q8]) | q8 : int(1..3)]),
    s_ExplicitVarSizeWithMarker_Marker <= sum([toInt(s_Occurrence[q10]) | q10 : int(1..3)]),
    and([q11 <= s_ExplicitVarSizeWithMarker_Marker -> s_Occurrence[s_ExplicitVarSizeWithMarker_Values[q11]]
             | q11 : int(1..3)]),
    sum([toInt(s_Occurrence[q15]) | q15 : int(1..3)]) <= s_ExplicitVarSizeWithMarker_Marker,
    and([s_Occurrence[q12] ->
         or([q14 <= s_ExplicitVarSizeWithMarker_Marker /\ s_ExplicitVarSizeWithMarker_Values[q14] = q12
                 | q14 : int(1..3)])
             | q12 : int(1..3)])

