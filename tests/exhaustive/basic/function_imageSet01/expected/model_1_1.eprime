language ESSENCE' 1.0

find f_Function1DPartial_Flags: matrix indexed by [int(1..2)] of bool
find f_Function1DPartial_Values: matrix indexed by [int(1..2)] of int(1..2)
find s_Occurrence: matrix indexed by [int(1..3)] of bool
branching on [f_Function1DPartial_Flags, f_Function1DPartial_Values, s_Occurrence]
such that
    and([sum([toInt(f_Function1DPartial_Flags[q7]) | q7 : int(1..2), q7 = i]) =
         sum([toInt(s_Occurrence[q8]) | q8 : int(1..3)])
         /\
         (sum([toInt(f_Function1DPartial_Flags[q14]) | q14 : int(1..2), q14 = i]) <=
          sum([toInt(s_Occurrence[q15]) | q15 : int(1..3)])
          /\
          and([f_Function1DPartial_Flags[q11] -> s_Occurrence[f_Function1DPartial_Values[q11]]
                   | q11 : int(1..2), q11 = i]))
         /\
         (sum([toInt(s_Occurrence[q20]) | q20 : int(1..3)]) <=
          sum([toInt(f_Function1DPartial_Flags[q23]) | q23 : int(1..2), q23 = i])
          /\
          and([s_Occurrence[q16] ->
               or([f_Function1DPartial_Flags[q19] /\ f_Function1DPartial_Values[q19] = q16 | q19 : int(1..2), q19 = i])
                   | q16 : int(1..3)]))
             | i : int(1..2)]),
    and([f_Function1DPartial_Flags[q1] = false -> f_Function1DPartial_Values[q1] = 1 | q1 : int(1..2)])

