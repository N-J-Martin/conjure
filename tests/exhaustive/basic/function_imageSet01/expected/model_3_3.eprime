language ESSENCE' 1.0

find f_Function1DPartial_Flags: matrix indexed by [int(1..2)] of bool
find f_Function1DPartial_Values: matrix indexed by [int(1..2)] of int(1..2)
find s_ExplicitVarSizeWithMarker_Marker: int(0..3)
find s_ExplicitVarSizeWithMarker_Values: matrix indexed by [int(1..3)] of int(1..3)
branching on
    [f_Function1DPartial_Flags, f_Function1DPartial_Values, s_ExplicitVarSizeWithMarker_Marker,
     s_ExplicitVarSizeWithMarker_Values]
such that
    and([sum([toInt(f_Function1DPartial_Flags[q9]) | q9 : int(1..2), q9 = i]) = s_ExplicitVarSizeWithMarker_Marker /\
         (sum([toInt(f_Function1DPartial_Flags[q13]) | q13 : int(1..2), q13 = i]) <= s_ExplicitVarSizeWithMarker_Marker
          /\
          and([f_Function1DPartial_Flags[q15] ->
               or([q17 <= s_ExplicitVarSizeWithMarker_Marker /\
                   s_ExplicitVarSizeWithMarker_Values[q17] = f_Function1DPartial_Values[q15]
                       | q17 : int(1..3)])
                   | q15 : int(1..2), q15 = i]))
         /\
         (s_ExplicitVarSizeWithMarker_Marker <= sum([toInt(f_Function1DPartial_Flags[q21]) | q21 : int(1..2), q21 = i])
          /\
          and([q22 <= s_ExplicitVarSizeWithMarker_Marker ->
               or([f_Function1DPartial_Flags[q25] /\
                   f_Function1DPartial_Values[q25] = s_ExplicitVarSizeWithMarker_Values[q22]
                       | q25 : int(1..2), q25 = i])
                   | q22 : int(1..3)]))
             | i : int(1..2)]),
    and([f_Function1DPartial_Flags[q1] = false -> f_Function1DPartial_Values[q1] = 1 | q1 : int(1..2)]),
    and([q4 + 1 <= s_ExplicitVarSizeWithMarker_Marker ->
         s_ExplicitVarSizeWithMarker_Values[q4] < s_ExplicitVarSizeWithMarker_Values[q4 + 1]
             | q4 : int(1..2)]),
    and([q5 > s_ExplicitVarSizeWithMarker_Marker -> s_ExplicitVarSizeWithMarker_Values[q5] = 1 | q5 : int(1..3)])

