language ESSENCE' 1.0

find f_Function1DPartial_Flags: matrix indexed by [int(1..2)] of bool
find f_Function1DPartial_Values: matrix indexed by [int(1..2)] of int(1..2)
find s_ExplicitVarSizeWithMarker_Marker: int(0..3)
find s_ExplicitVarSizeWithMarker_Values: matrix indexed by [int(1..3)] of int(1..3)
find s_ExplicitVarSizeWithDummy: matrix indexed by [int(1..3)] of int(1..4)
branching on
    [f_Function1DPartial_Flags, f_Function1DPartial_Values, s_ExplicitVarSizeWithDummy,
     s_ExplicitVarSizeWithMarker_Marker, s_ExplicitVarSizeWithMarker_Values]
such that
    and([sum([toInt(f_Function1DPartial_Flags[q27]) | q27 : int(1..2), q27 = i]) = s_ExplicitVarSizeWithMarker_Marker /\
         (sum([toInt(f_Function1DPartial_Flags[q31]) | q31 : int(1..2), q31 = i]) <= s_ExplicitVarSizeWithMarker_Marker
          /\
          and([f_Function1DPartial_Flags[q33] ->
               or([q35 <= s_ExplicitVarSizeWithMarker_Marker /\
                   s_ExplicitVarSizeWithMarker_Values[q35] = f_Function1DPartial_Values[q33]
                       | q35 : int(1..3)])
                   | q33 : int(1..2), q33 = i]))
         /\
         (s_ExplicitVarSizeWithMarker_Marker <= sum([toInt(f_Function1DPartial_Flags[q39]) | q39 : int(1..2), q39 = i])
          /\
          and([q40 <= s_ExplicitVarSizeWithMarker_Marker ->
               or([f_Function1DPartial_Flags[q43] /\
                   f_Function1DPartial_Values[q43] = s_ExplicitVarSizeWithMarker_Values[q40]
                       | q43 : int(1..2), q43 = i])
                   | q40 : int(1..3)]))
             | i : int(1..2)]),
    and([f_Function1DPartial_Flags[q1] = false -> f_Function1DPartial_Values[q1] = 1 | q1 : int(1..2)]),
    and([q4 + 1 <= s_ExplicitVarSizeWithMarker_Marker ->
         s_ExplicitVarSizeWithMarker_Values[q4] < s_ExplicitVarSizeWithMarker_Values[q4 + 1]
             | q4 : int(1..2)]),
    and([q5 > s_ExplicitVarSizeWithMarker_Marker -> s_ExplicitVarSizeWithMarker_Values[q5] = 1 | q5 : int(1..3)]),
    and([s_ExplicitVarSizeWithDummy[q7] < s_ExplicitVarSizeWithDummy[q7 + 1] \/ s_ExplicitVarSizeWithDummy[q7] = 4
             | q7 : int(1..2)]),
    and([s_ExplicitVarSizeWithDummy[q8] = 4 -> s_ExplicitVarSizeWithDummy[q8 + 1] = 4 | q8 : int(1..2)]),
    sum([toInt(s_ExplicitVarSizeWithDummy[q12] != 4) | q12 : int(1..3)]) = s_ExplicitVarSizeWithMarker_Marker,
    sum([toInt(s_ExplicitVarSizeWithDummy[q18] != 4) | q18 : int(1..3)]) <= s_ExplicitVarSizeWithMarker_Marker,
    and([s_ExplicitVarSizeWithDummy[q14] != 4 ->
         or([q16 <= s_ExplicitVarSizeWithMarker_Marker /\
             s_ExplicitVarSizeWithMarker_Values[q16] = s_ExplicitVarSizeWithDummy[q14]
                 | q16 : int(1..3)])
             | q14 : int(1..3)]),
    s_ExplicitVarSizeWithMarker_Marker <= sum([toInt(s_ExplicitVarSizeWithDummy[q21] != 4) | q21 : int(1..3)]),
    and([q22 <= s_ExplicitVarSizeWithMarker_Marker ->
         or([s_ExplicitVarSizeWithDummy[q24] != 4 /\
             s_ExplicitVarSizeWithDummy[q24] = s_ExplicitVarSizeWithMarker_Values[q22]
                 | q24 : int(1..3)])
             | q22 : int(1..3)])

