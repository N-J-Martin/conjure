language ESSENCE' 1.0

find s_Occurrence: matrix indexed by [int(1..2)] of bool
find s_ExplicitVarSizeWithDummy: matrix indexed by [int(1..2)] of int(1..3)
branching on [s_ExplicitVarSizeWithDummy, s_Occurrence]
such that
    or([s_ExplicitVarSizeWithDummy[q21] != 3 /\
        s_ExplicitVarSizeWithDummy[q21] = sum([toInt(s_Occurrence[q22]) | q22 : int(1..2)])
            | q21 : int(1..2)]),
    s_ExplicitVarSizeWithDummy[1] < s_ExplicitVarSizeWithDummy[2] \/ s_ExplicitVarSizeWithDummy[1] = 3,
    s_ExplicitVarSizeWithDummy[1] = 3 -> s_ExplicitVarSizeWithDummy[2] = 3,
    sum([toInt(s_ExplicitVarSizeWithDummy[q7] != 3) | q7 : int(1..2)]) =
    sum([toInt(s_Occurrence[q8]) | q8 : int(1..2)]),
    sum([toInt(s_ExplicitVarSizeWithDummy[q12] != 3) | q12 : int(1..2)]) <=
    sum([toInt(s_Occurrence[q13]) | q13 : int(1..2)]),
    and([s_ExplicitVarSizeWithDummy[q10] != 3 -> s_Occurrence[s_ExplicitVarSizeWithDummy[q10]] | q10 : int(1..2)]),
    sum([toInt(s_Occurrence[q17]) | q17 : int(1..2)]) <=
    sum([toInt(s_ExplicitVarSizeWithDummy[q19] != 3) | q19 : int(1..2)]),
    and([s_Occurrence[q14] ->
         or([s_ExplicitVarSizeWithDummy[q16] != 3 /\ s_ExplicitVarSizeWithDummy[q16] = q14 | q16 : int(1..2)])
             | q14 : int(1..2)])

