language ESSENCE' 1.0

find x_PartitionAsSet_ExplicitVarSizeWithMarkerR2_Marker: int(0..4)
find x_PartitionAsSet_ExplicitVarSizeWithMarkerR2_Values_Occurrence: matrix indexed by [int(1..4), int(1..4)] of bool
such that
    and([q13 <= x_PartitionAsSet_ExplicitVarSizeWithMarkerR2_Marker ->
         sum([toInt(x_PartitionAsSet_ExplicitVarSizeWithMarkerR2_Values_Occurrence[q13, q14]) | q14 : int(1..4)]) = 2
             | q13 : int(1..4)]),
    alldifferent_except([toInt(q15 <= x_PartitionAsSet_ExplicitVarSizeWithMarkerR2_Marker /\
                               x_PartitionAsSet_ExplicitVarSizeWithMarkerR2_Values_Occurrence[q15, q2])
                         * catchUndef(q2, 0)
                             | q15 : int(1..4), q2 : int(1..4)],
                        0),
    and([q16 <= x_PartitionAsSet_ExplicitVarSizeWithMarkerR2_Marker ->
         sum([toInt(x_PartitionAsSet_ExplicitVarSizeWithMarkerR2_Values_Occurrence[q16, q17]) | q17 : int(1..4)]) >= 1
             | q16 : int(1..4)]),
    and([q4 + 1 <= x_PartitionAsSet_ExplicitVarSizeWithMarkerR2_Marker ->
         x_PartitionAsSet_ExplicitVarSizeWithMarkerR2_Values_Occurrence[q4, ..] <lex
         x_PartitionAsSet_ExplicitVarSizeWithMarkerR2_Values_Occurrence[q4 + 1, ..]
             | q4 : int(1..3)]),
    and([q5 > x_PartitionAsSet_ExplicitVarSizeWithMarkerR2_Marker ->
         and([x_PartitionAsSet_ExplicitVarSizeWithMarkerR2_Values_Occurrence[q5, q9] = false | q9 : int(1..4)])
             | q5 : int(1..4)]),
    x_PartitionAsSet_ExplicitVarSizeWithMarkerR2_Marker <= 4,
    4 =
    sum([toInt(q10 <= x_PartitionAsSet_ExplicitVarSizeWithMarkerR2_Marker) *
         catchUndef(sum([toInt(x_PartitionAsSet_ExplicitVarSizeWithMarkerR2_Values_Occurrence[q10, q11])
                             | q11 : int(1..4)]),
                    0)
             | q10 : int(1..4)])

