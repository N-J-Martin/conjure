language ESSENCE' 1.0

find conjure_aux1: int(1)
find s_ExplicitVarSizeWithDummy: matrix indexed by [int(1..4)] of int(1..5)
find s_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..4)] of bool
find s_ExplicitVarSizeWithFlags_Values: matrix indexed by [int(1..4)] of int(1..4)
find conjure_aux2: int(1..5)
branching on
    [conjure_aux1, s_ExplicitVarSizeWithFlags_Flags, s_ExplicitVarSizeWithFlags_Values, s_ExplicitVarSizeWithDummy]
such that
    and([s_ExplicitVarSizeWithDummy[q31] != 5 -> s_ExplicitVarSizeWithDummy[q31] >= conjure_aux2 | q31 : int(1..4)]),
    sum([toInt(s_ExplicitVarSizeWithDummy[q31] != 5) | q31 : int(1..4)]) > 0 ->
    or([s_ExplicitVarSizeWithDummy[q31] != 5 /\ s_ExplicitVarSizeWithDummy[q31] = conjure_aux2 | q31 : int(1..4)]),
    sum([toInt(s_ExplicitVarSizeWithDummy[q31] != 5) | q31 : int(1..4)]) = 0 -> conjure_aux2 = 1,
    conjure_aux2 = 3,
    sum([toInt(s_ExplicitVarSizeWithDummy[q31] != 5) | q31 : int(1..4)]) > 0,
    and([s_ExplicitVarSizeWithDummy[q1] < s_ExplicitVarSizeWithDummy[q1 + 1] \/ s_ExplicitVarSizeWithDummy[q1] = 5
             | q1 : int(1..3)]),
    and([s_ExplicitVarSizeWithDummy[q2] = 5 -> s_ExplicitVarSizeWithDummy[q2 + 1] = 5 | q2 : int(1..3)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q5 + 1] ->
         s_ExplicitVarSizeWithFlags_Values[q5] < s_ExplicitVarSizeWithFlags_Values[q5 + 1]
             | q5 : int(1..3)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q6] = false -> s_ExplicitVarSizeWithFlags_Values[q6] = 1 | q6 : int(1..4)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q7 + 1] -> s_ExplicitVarSizeWithFlags_Flags[q7] | q7 : int(1..3)]),
    sum([toInt(s_ExplicitVarSizeWithFlags_Flags[q11]) | q11 : int(1..4)]) =
    sum([toInt(s_ExplicitVarSizeWithDummy[q13] != 5) | q13 : int(1..4)]),
    sum([toInt(s_ExplicitVarSizeWithFlags_Flags[q19]) | q19 : int(1..4)]) <=
    sum([toInt(s_ExplicitVarSizeWithDummy[q21] != 5) | q21 : int(1..4)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q15] ->
         or([s_ExplicitVarSizeWithDummy[q17] != 5 /\
             s_ExplicitVarSizeWithDummy[q17] = s_ExplicitVarSizeWithFlags_Values[q15]
                 | q17 : int(1..4)])
             | q15 : int(1..4)]),
    sum([toInt(s_ExplicitVarSizeWithDummy[q27] != 5) | q27 : int(1..4)]) <=
    sum([toInt(s_ExplicitVarSizeWithFlags_Flags[q29]) | q29 : int(1..4)]),
    and([s_ExplicitVarSizeWithDummy[q23] != 5 ->
         or([s_ExplicitVarSizeWithFlags_Flags[q25] /\
             s_ExplicitVarSizeWithFlags_Values[q25] = s_ExplicitVarSizeWithDummy[q23]
                 | q25 : int(1..4)])
             | q23 : int(1..4)])

