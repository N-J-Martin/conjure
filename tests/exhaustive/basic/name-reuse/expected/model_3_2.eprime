language ESSENCE' 1.0

find conjure_aux1: int(1)
find s_ExplicitVarSizeWithMarker_Marker: int(0..4)
find s_ExplicitVarSizeWithMarker_Values: matrix indexed by [int(1..4)] of int(1..4)
find s_ExplicitVarSizeWithDummy: matrix indexed by [int(1..4)] of int(1..5)
find conjure_aux2: int(1..4)
branching on
    [conjure_aux1, s_ExplicitVarSizeWithDummy, s_ExplicitVarSizeWithMarker_Marker, s_ExplicitVarSizeWithMarker_Values]
such that
    and([q23 <= s_ExplicitVarSizeWithMarker_Marker -> s_ExplicitVarSizeWithMarker_Values[q23] >= conjure_aux2
             | q23 : int(1..4)]),
    sum([toInt(q23 <= s_ExplicitVarSizeWithMarker_Marker) | q23 : int(1..4)]) > 0 ->
    or([q23 <= s_ExplicitVarSizeWithMarker_Marker /\ s_ExplicitVarSizeWithMarker_Values[q23] = conjure_aux2
            | q23 : int(1..4)]),
    sum([toInt(q23 <= s_ExplicitVarSizeWithMarker_Marker) | q23 : int(1..4)]) = 0 -> conjure_aux2 = 1,
    conjure_aux2 = 3,
    sum([toInt(q23 <= s_ExplicitVarSizeWithMarker_Marker) | q23 : int(1..4)]) > 0,
    and([q1 + 1 <= s_ExplicitVarSizeWithMarker_Marker ->
         s_ExplicitVarSizeWithMarker_Values[q1] < s_ExplicitVarSizeWithMarker_Values[q1 + 1]
             | q1 : int(1..3)]),
    and([q2 > s_ExplicitVarSizeWithMarker_Marker -> s_ExplicitVarSizeWithMarker_Values[q2] = 1 | q2 : int(1..4)]),
    and([s_ExplicitVarSizeWithDummy[q4] < s_ExplicitVarSizeWithDummy[q4 + 1] \/ s_ExplicitVarSizeWithDummy[q4] = 5
             | q4 : int(1..3)]),
    and([s_ExplicitVarSizeWithDummy[q5] = 5 -> s_ExplicitVarSizeWithDummy[q5 + 1] = 5 | q5 : int(1..3)]),
    sum([toInt(s_ExplicitVarSizeWithDummy[q9] != 5) | q9 : int(1..4)]) = s_ExplicitVarSizeWithMarker_Marker,
    sum([toInt(s_ExplicitVarSizeWithDummy[q15] != 5) | q15 : int(1..4)]) <= s_ExplicitVarSizeWithMarker_Marker,
    and([s_ExplicitVarSizeWithDummy[q11] != 5 ->
         or([q13 <= s_ExplicitVarSizeWithMarker_Marker /\
             s_ExplicitVarSizeWithMarker_Values[q13] = s_ExplicitVarSizeWithDummy[q11]
                 | q13 : int(1..4)])
             | q11 : int(1..4)]),
    s_ExplicitVarSizeWithMarker_Marker <= sum([toInt(s_ExplicitVarSizeWithDummy[q18] != 5) | q18 : int(1..4)]),
    and([q19 <= s_ExplicitVarSizeWithMarker_Marker ->
         or([s_ExplicitVarSizeWithDummy[q21] != 5 /\
             s_ExplicitVarSizeWithDummy[q21] = s_ExplicitVarSizeWithMarker_Values[q19]
                 | q21 : int(1..4)])
             | q19 : int(1..4)])

