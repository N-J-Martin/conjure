language ESSENCE' 1.0

find x_PartitionSequenceAsSet_ExplicitR14_ExplicitBounded_Length: matrix indexed by [int(1..2)] of int(2)
find x_PartitionSequenceAsSet_ExplicitR14_ExplicitBounded_Values: matrix indexed by [int(1..2), int(1..2)] of int(3..6)
such that
    alldifferent_except([toInt(q10 <= x_PartitionSequenceAsSet_ExplicitR14_ExplicitBounded_Length[q9]) *
                         catchUndef(x_PartitionSequenceAsSet_ExplicitR14_ExplicitBounded_Values[q9, q10] + -2, 0)
                             | q9 : int(1..2), q10 : int(1..2)],
                        0),
    and([x_PartitionSequenceAsSet_ExplicitR14_ExplicitBounded_Length[q11] >= 1 | q11 : int(1..2)]),
    x_PartitionSequenceAsSet_ExplicitR14_ExplicitBounded_Length[1] <
    x_PartitionSequenceAsSet_ExplicitR14_ExplicitBounded_Length[2]
    \/
    x_PartitionSequenceAsSet_ExplicitR14_ExplicitBounded_Length[1] =
    x_PartitionSequenceAsSet_ExplicitR14_ExplicitBounded_Length[2]
    /\
    x_PartitionSequenceAsSet_ExplicitR14_ExplicitBounded_Values[1, ..] <lex
    x_PartitionSequenceAsSet_ExplicitR14_ExplicitBounded_Values[2, ..],
    4 = sum([x_PartitionSequenceAsSet_ExplicitR14_ExplicitBounded_Length[q8] | q8 : int(1..2)])

