language Essence 1.3

find var1: int(3..3, -4..0)
find var2: relation of (set of int(1..1, 2..3) * tuple (int(4, -5)) * bool)
find var3: bool
find var4: (int(0), partition from bool, int(3..3), bool)
find var5: partition from set of int(1, 1)
find var6: int(-1..1)
such that
    {function(partition({4, -7}) --> function(true --> -3)),
     function(partition({10}) --> function(false --> 7, false --> -2)),
     function(partition({-5, -7}) --> function(false --> -9, false --> 6),
              partition({-8, -5}) --> function(true --> -7, false --> -8),
              partition({-3, 8}) --> function(false --> 8),
              partition({-4}, {-8}) --> function(true --> -4))}
    !=
    {function(partition({7}) --> function(true --> -5, true --> -7),
              partition({-3}) --> function(false --> -5),
              partition({10}, {-3}) --> function(true --> 4),
              partition({-9, 3}) --> function(true --> 7))}
    /\
    (true, {(mset() : `mset of bool`)}, var6 <= var6,
     [(9, -6), (-7, 8); int(4..4, -4)])
    !=
    (({} : `set of bool`) = ({} : `set of bool`), ({} : `set of mset of bool`),
     (false -> false) in ({} : `set of bool`), [(5, 3), (1, 8), (-6, 7); int(2..4)])
