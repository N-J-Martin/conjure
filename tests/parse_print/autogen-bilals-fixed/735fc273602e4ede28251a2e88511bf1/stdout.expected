language Essence 1.3

find var1: function int(4, 3..4) --> int(1..4, 3)
find var2: bool
find var3: int(-3, -3)
find var4: function bool --> tuple (bool)
find var5: int(3)
such that
    partition({relation((9, true, true, 8), (-1, false, true, -4), (9, true, true, 6)),
               relation((3, false, false, 0), (1, true, false, -9), (-6, false, false, 6)),
               relation((-1, true, false, -2), (-6, true, true, -2), (1, false, false, 4)),
               relation((0, true, true, 9), (4, true, true, 0), (3, false, true, -10))})
    !=
    partition({relation((-4, true, true, 5), (10, false, false, -10), (-8, true, true, -8))},
              {relation((9, true, false, 8), (-7, true, true, 5), (-9, false, false, -9)),
               relation((-7, false, false, -5), (-9, false, true, 2), (-8, false, false, 2)),
               relation((9, true, false, 0), (-4, true, false, 4), (-6, false, false, 9))},
              {relation((0, false, true, -3), (3, false, true, 1), (-8, true, false, 10))}),
    true,
    true,
    or([var4 = var4 <-> var5 != var5 | q_6 : int(3), q_6 <= 3 + |function(true --> 6)|])
