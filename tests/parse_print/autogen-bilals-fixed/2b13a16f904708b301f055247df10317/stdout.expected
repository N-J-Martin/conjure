language Essence 1.3

find var1: bool
find var2: partition from bool
find var3: bool
find var4: relation of ((int(0, -4..-3), int(1)) * int(4..5, 2..4) * set of bool)
find var5: relation of (set of int(1))
find var6: bool
such that
    false \/ false,
    relation((relation((-10, true), (-9, false), (10, false)),
              function(var2 --> partition({7}, {6}), var2 --> partition({5, -9}),
                       partition({false, false}) --> partition({-8}), var2 --> partition({1})),
              parts(partition({true}, {false})),
              (tuple (true), ({} : `set of int`), function(9 --> 7, -6 --> 5), var3)),
             (toRelation(function(0 --> false, -9 --> false)),
              function(partition({true}, {true}) --> partition({-1}), var2 --> partition({-7}),
                       var2 --> partition({2})),
              parts(var2), (tuple (false), ({} : `set of int`), function(8 --> -4), true -> true)),
             (toRelation(function(-6 --> true)), function(partition({true}) --> partition({2}, {0})),
              {({} : `set of bool`), {false}, {false, true}},
              (tuple (false), ({} : `set of int`), function(-10 --> 7, 3 --> -3), false != true)))
    !=
    relation((toRelation(function(5 --> false)),
              function(partition({true}, {true}) --> partition({5, 3}), partition({false}) --> partition({-4, 10}),
                       var2 --> partition({-6, 3})),
              parts(partition({false})), (tuple (false), {2, -8}, function(9 --> 10), false = true)),
             (toRelation(function(6 --> false)),
              function(var2 --> partition({8}, {2}), partition({true}) --> partition({3})),
              parts(partition({false}, {false})), (tuple (true), {2, 9}, function(9 --> -3), var1)),
             (toRelation(function(-2 --> true, -8 --> true)),
              function(partition({true}) --> partition({-3, 2}), var2 --> partition({3}, {6})), {({} : `set of bool`)},
              (tuple (true), ({} : `set of int`), function(-3 --> -5, 7 --> 2), true <-> false))),
    mset(partition({function(tuple (-8) --> mset(false, true))},
                   {function(tuple (7) --> mset(false, false)),
                    function(tuple (1) --> mset(false, true), tuple (-1) --> mset(false),
                             tuple (6) --> (mset() : `mset of bool`)),
                    function(tuple (3) --> mset(true, true), tuple (-8) --> mset(false), tuple (-5) --> mset(false),
                             tuple (0) --> (mset() : `mset of bool`)),
                    function(tuple (2) --> (mset() : `mset of bool`), tuple (-9) --> (mset() : `mset of bool`))}),
         partition({function(tuple (-2) --> (mset() : `mset of bool`), tuple (-4) --> mset(false, false),
                             tuple (9) --> (mset() : `mset of bool`), tuple (10) --> mset(true, false))},
                   {function(tuple (-5) --> (mset() : `mset of bool`), tuple (-2) --> mset(true))},
                   {function(tuple (-6) --> mset(true, true), tuple (-10) --> (mset() : `mset of bool`),
                             tuple (9) --> (mset() : `mset of bool`))}),
         partition({function(tuple (2) --> mset(true, true), tuple (1) --> mset(false, false),
                             tuple (9) --> (mset() : `mset of bool`), tuple (1) --> mset(false, false))}),
         partition({function(tuple (1) --> mset(true, false), tuple (6) --> (mset() : `mset of bool`),
                             tuple (-2) --> mset(false, false))}))
    =
    mset(partition({function(tuple (-4) --> mset(true, false), tuple (7) --> mset(false, true),
                             tuple (-6) --> mset(false, false), tuple (3) --> mset(true, false)),
                    function(tuple (3) --> (mset() : `mset of bool`))},
                   {function(tuple (-3) --> (mset() : `mset of bool`), tuple (-5) --> mset(true, true),
                             tuple (6) --> mset(false, true))},
                   {function(tuple (1) --> mset(false), tuple (-5) --> (mset() : `mset of bool`)),
                    function(tuple (-2) --> mset(false), tuple (-4) --> mset(true))}),
         partition({function(tuple (0) --> mset(false)), function(tuple (10) --> mset(false)),
                    function(tuple (0) --> mset(false), tuple (7) --> mset(false))}),
         partition({function(tuple (2) --> mset(false))},
                   {function(tuple (8) --> mset(false, true), tuple (-9) --> mset(false, true),
                             tuple (6) --> mset(true), tuple (-4) --> mset(false))},
                   {function(tuple (3) --> mset(false, true))}),
         partition({function(tuple (3) --> mset(false, false), tuple (-7) --> (mset() : `mset of bool`),
                             tuple (7) --> mset(true, true)),
                    function(tuple (7) --> (mset() : `mset of bool`), tuple (5) --> mset(true, true),
                             tuple (2) --> (mset() : `mset of bool`), tuple (6) --> mset(false, true))}),
         partition({function(tuple (4) --> mset(false), tuple (4) --> (mset() : `mset of bool`),
                             tuple (-3) --> (mset() : `mset of bool`)),
                    function(tuple (10) --> (mset() : `mset of bool`), tuple (8) --> mset(false, false),
                             tuple (-8) --> (mset() : `mset of bool`))},
                   {function(tuple (-6) --> mset(false, false), tuple (-10) --> (mset() : `mset of bool`),
                             tuple (9) --> (mset() : `mset of bool`)),
                    function(tuple (0) --> (mset() : `mset of bool`), tuple (0) --> mset(false),
                             tuple (1) --> (mset() : `mset of bool`)),
                    function(tuple (-6) --> mset(false), tuple (-6) --> mset(true), tuple (6) --> mset(false),
                             tuple (-3) --> mset(true, true)),
                    function(tuple (6) --> mset(false))}),
         partition({function(tuple (-2) --> mset(true), tuple (3) --> mset(false),
                             tuple (4) --> (mset() : `mset of bool`))}),
         partition({function(tuple (-1) --> (mset() : `mset of bool`), tuple (-7) --> (mset() : `mset of bool`),
                             tuple (-3) --> mset(true, true), tuple (-4) --> mset(false, true))})),
    mset((relation((true, 3, 10), (false, 6, -7), (true, 3, -8)),
          [partition({9, -5}), partition({0, 6}), partition({-6}), partition({-2}), partition({10}); int(-2..2)]),
         (relation((false, 1, 6), (true, 5, 9), (false, 1, 1)),
          [partition({-5, 2}), partition({0}), partition({6, -6}); int(-5, 2..3)]),
         (relation((true, 2, -7), (false, 9, -8), (false, -6, 3)), [partition({7, 2}); int(-5)]),
         (relation((true, -10, -6), (true, -6, 6), (true, 4, -6)), [partition({8}, {6}); int(-2, -2)]),
         (relation((false, 7, 1), (false, -5, 6), (false, 9, 9)),
          [partition({-7}, {-8}), partition({-10}, {8}); int(-5, -2)]))
    !=
    mset((relation((true, 1, 5), (false, -4, 10), (true, 10, 8)), [partition({-8}), partition({5, -3}); int(0, -3)]),
         (relation((false, 10, 0), (false, -2, 7), (true, 8, 5)), [partition({5}); int(-2)]),
         (relation((false, 5, 1), (false, -4, -3), (false, 0, 1)),
          [partition({5, -2}), partition({0}, {-1}); int(3, 0)]),
         (relation((true, -2, -10), (false, 10, -6), (false, -3, 3)),
          [partition({7}, {5}), partition({1}); int(5, -1)]),
         (relation((true, 2, 1), (false, -2, 6), (false, -7, -3)), [partition({0, 1}), partition({9}); int(-2, 2)]),
         (relation((true, 8, -1), (false, 8, 9), (false, 2, -2)),
          [partition({-9}, {3}), partition({-6}), partition({-9}), partition({4}), partition({-9}), partition({9}),
           partition({1}, {-5}), partition({6, 2});
               int(-2, -5..2)]),
         (relation((true, -3, -9), (false, 1, 5), (true, 1, -5)),
          [partition({9}, {-5}), partition({10}), partition({-1}), partition({-8}, {-4}), partition({-6, 5}),
           partition({5}, {5});
               int(-2, -1..3)]),
         (relation((true, -6, -5), (true, -3, -3), (true, -2, -10)), [partition({-6}, {-1}); int(-1)])),
    true
