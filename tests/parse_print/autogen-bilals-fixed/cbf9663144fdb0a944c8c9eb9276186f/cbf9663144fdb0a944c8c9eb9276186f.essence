language Essence 1.3

find var1: matrix indexed by [int(5, 3), int(0, 4)] of int(4..4, 5..5)
find var2: matrix indexed by [int(0, 2)] of bool
find var3: int(2, 0)
find var4: bool
find var5: int(2, 1)
find var6: bool
find var7: bool
such that
    true,
    var7,
    var4,
    false,
    [[[var3, var3; int(5, 2..2)]; int(0..0)], var1,
     [[0, 0; int(4, 1..1)], [2, 2, 2, 2, 1; int(5..9)],
      [1, 2, 4, 1; int(2..5)]; int(5..6, 8..8)]; int(2..4)][var5]
    =
    [([] : `matrix indexed by [int, int] of int`), var1,
     [[5; int(2..2)], [0, 0, 1, 4; int(12, 8, 7, 2..2)], [2, 2, 2; int(8, 2, 6..6)],
      [var5; int(2..2)]; int(11, 4, 8, 9..9)],
     var1; int(8..11)][2],
    var3 = var5
maximising
    [[0 | l_3 : int(3..5, 0)]
         | l_1 : matrix indexed by [int(4..5, 5)] of int(5..5, 5),
           l_2 : matrix indexed by [int(2, 3)] of int(5..5, 2), 1 ** 1 = 3 ** 3,
           [false, true, false, false, true; int(0, 8..10, 14..14)][4]][[5, 0; int(4,
                                                                                   1..1)][var5 ** var3]
                                                                        ** var5,
                                                                        var5]
