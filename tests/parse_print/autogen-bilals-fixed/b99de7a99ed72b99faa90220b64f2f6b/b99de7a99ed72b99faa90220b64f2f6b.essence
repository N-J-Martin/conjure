language Essence 1.3

given given1: set (minSize 3, maxSize 5) of int(1, 4..5)
find var1: int(5..5, 2..4)
given given2: partition (minNumParts 1 , maxNumParts 1) from int(4..5, 4)
find var2: function (minSize 2, maxSize 5, surjective) bool --> bool
such that
    allDiff([3, var1, 0 / var1, var1; int(5, 1, 9, 8..8)]),
    and(flatten([false, false, true, true; int(8, 4..6)])),
    true,
    false,
    allDiff([tuple (5), tuple (3), tuple (2), tuple (4), tuple (1); int(3, 7, 4..6)])
maximising max({var1})
