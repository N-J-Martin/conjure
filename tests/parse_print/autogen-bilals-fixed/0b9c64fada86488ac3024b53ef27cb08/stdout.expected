language Essence 1.3

find var1: function (size 0, bijective) bool --> bool
find var2: relation (minSize 0) of (int(0, 5) * bool * int(2..3, 2))
find var3: relation (size 2) of (int(1, 1) * int(1..2, 3) * bool)
find var4: partition (regular) from int(3, 1..4)
such that
    false,
    false,
    true,
    image(var1, true -> false),
    together({1, 2, 4}, partition({5, 0, 5, 3, 5}, {4, 1, 0, 5, 5}, {5, 4, 5}, {3, 4, 3, 5, 3}, {1, 1})),
    mset(5, 1, 5) subset mset(4, 1, 2),
    false
