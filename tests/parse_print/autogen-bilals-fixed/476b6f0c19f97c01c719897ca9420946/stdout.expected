language Essence 1.3

find var1: mset (size 4 - 1, minOccur 3, maxOccur 3) of set of bool
find var2: partition (numParts -2, partSize toInt(true), regular) from function (size 4, injective) bool --> bool
find var3: set (minSize toInt(true)) of mset (maxSize 0) of bool
such that
    false,
    or([l_1 | l_1 : bool, l_1, l_1]),
    false,
    image(function([false, false, true; int(4, 5, 7)] --> tuple (false)),
          flatten([false, true, false, true; int(7..10)]))
        [1],
    !or(flatten([false, false; int(4..5)])),
    (relation((relation(tuple (false), tuple (true)), {true, true, false})) subsetEq
     relation((relation(tuple (false)), ({} : `set of bool`))))
    <= (({} : `set of set of bool`) supsetEq {{false, true, true}, {false}}),
    !(function({true} --> false != false, {false, false} --> true != true) subset
      (function() : `function set of bool --> bool`))
