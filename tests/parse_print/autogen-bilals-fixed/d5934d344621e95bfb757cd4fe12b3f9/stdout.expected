language Essence 1.3

find var1:
        relation (minSize toInt(inverse(function(1 --> false, 3 --> false, 1 --> false),
                                        function(true --> 0, false --> 2))), maxSize image(function({1, 1} --> 2),
                                                                                           {toInt(true)})) of
            ((set (size -3) of relation (maxSize 0) of (int(5, 4)),
              (mset (minSize 0, maxSize 5, minOccur 5, maxOccur 5) of bool, int(5, 5), (bool, bool, bool)),
              partition (minNumParts 0, maxNumParts 2, minPartSize 3 ** 0, regular) from
                  relation (size 1) of (bool * int(2..5, 5) * bool)) *
             relation (size toInt(false < false)) of
                 (relation (minSize 4, maxSize 4) of
                      (matrix indexed by [int(1..2, 5)] of bool * mset (maxOccur 0) of bool) *
                  relation (maxSize 3 % 2) of
                      (mset (size 2, maxOccur 4) of bool * partition (partSize 1, regular) from bool *
                       set (minSize 1) of bool) *
                  function (maxSize -2, bijective) bool --> mset (minSize 4, maxSize 5, minOccur 3) of bool *
                  set (minSize 1, maxSize 3) of function (size 3, injective) bool --> bool))
such that true
