language ESSENCE' 1.0

find var1_1: int(-1, -3..3)
find var1_2: int(-1..3)
find var2_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..3)] of bool
find var2_ExplicitVarSizeWithFlags_Values:
        matrix indexed by [int(1..3)] of int(4, 1..2)
find var2_Occurrence: matrix indexed by [int(4, 1..2)] of bool
such that
    and([q_4_ExplicitVarSizeWithMarker_Marker =
         sum([toInt(var2_ExplicitVarSizeWithFlags_Flags[q10]) | q10 : int(1..3)])
         -> false
             | q_4_ExplicitVarSizeWithMarker_Marker : int(0..3),
               q_4_ExplicitVarSizeWithMarker_Values : matrix indexed by [int(1..3)] of int(4,
                                                                                           1..2),
               and([q1 + 1 <= q_4_ExplicitVarSizeWithMarker_Marker ->
                    q_4_ExplicitVarSizeWithMarker_Values[q1] <
                    q_4_ExplicitVarSizeWithMarker_Values[q1 + 1]
                        | q1 : int(1..2)]),
               and([q2 > q_4_ExplicitVarSizeWithMarker_Marker ->
                    q_4_ExplicitVarSizeWithMarker_Values[q2] = 4
                        | q2 : int(1..3)])]),
    and([var2_ExplicitVarSizeWithFlags_Flags[q4 + 1] ->
         var2_ExplicitVarSizeWithFlags_Values[q4] <
         var2_ExplicitVarSizeWithFlags_Values[q4 + 1]
             | q4 : int(1..2)]),
    and([var2_ExplicitVarSizeWithFlags_Flags[q5] = false ->
         var2_ExplicitVarSizeWithFlags_Values[q5] = 4
             | q5 : int(1..3)]),
    and([var2_ExplicitVarSizeWithFlags_Flags[q6 + 1] ->
         var2_ExplicitVarSizeWithFlags_Flags[q6]
             | q6 : int(1..2)]),
    and([var2_Occurrence[q11] ->
         or([var2_ExplicitVarSizeWithFlags_Flags[q13] /\
             var2_ExplicitVarSizeWithFlags_Values[q13] = q11
                 | q13 : int(1..3)])
             | q11 : int(4, 1..2)]),
    and([var2_ExplicitVarSizeWithFlags_Flags[q15] ->
         var2_Occurrence[var2_ExplicitVarSizeWithFlags_Values[q15]]
             | q15 : int(1..3)])

