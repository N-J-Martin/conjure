$ conjure parameter-generator problem.essence --essence-out problem-gen.essence
File: problem-gen.essence
language Essence 1.3

given minid_aircraft_middle: int(0..100)
given minid_aircraft_delta: int(0..50)
find minid_aircraft: int(0..100)
such that
    minid_aircraft >= minid_aircraft_middle - minid_aircraft_delta,
    minid_aircraft <= minid_aircraft_middle + minid_aircraft_delta
given maxid_aircraft_middle: int(0..100)
given maxid_aircraft_delta: int(0..50)
find maxid_aircraft: int(0..100)
such that
    maxid_aircraft >= maxid_aircraft_middle - maxid_aircraft_delta,
    maxid_aircraft <= maxid_aircraft_middle + maxid_aircraft_delta
given minid_person_middle: int(0..100)
given minid_person_delta: int(0..50)
find minid_person: int(0..100)
such that
    minid_person >= minid_person_middle - minid_person_delta,
    minid_person <= minid_person_middle + minid_person_delta
given maxid_person_middle: int(0..100)
given maxid_person_delta: int(0..50)
find maxid_person: int(0..100)
such that
    maxid_person >= maxid_person_middle - maxid_person_delta,
    maxid_person <= maxid_person_middle + maxid_person_delta
given minid_city_middle: int(0..100)
given minid_city_delta: int(0..50)
find minid_city: int(0..100)
such that
    minid_city >= minid_city_middle - minid_city_delta,
    minid_city <= minid_city_middle + minid_city_delta
given maxid_city_middle: int(0..100)
given maxid_city_delta: int(0..50)
find maxid_city: int(0..100)
such that
    maxid_city >= maxid_city_middle - maxid_city_delta,
    maxid_city <= maxid_city_middle + maxid_city_delta
given init_at__percentage: int(0..100)
given init_in__percentage: int(0..100)
given init_fuel_range_middle: int(-65536..65536)
given init_fuel_range_delta: int(0..65536)
given init_distance_range_middle: int(-65536..65536)
given init_distance_range_delta: int(0..65536)
given init_capacity_range_middle: int(-65536..65536)
given init_capacity_range_delta: int(0..65536)
given init_onboard_range_middle: int(-65536..65536)
given init_onboard_range_delta: int(0..65536)
given init_total_fuel_used_range_middle: int(-65536..65536)
given init_total_fuel_used_range_delta: int(0..65536)
find init:
        record {at_ : function (int(0..100), int(0..100)) --> bool, in_ : function (int(0..100), int(0..100)) --> bool,
                fuel : function int(0..100) --> int(-65536..65536),
                distance : function (int(0..100), int(0..100)) --> int(-65536..65536),
                capacity : function int(0..100) --> int(-65536..65536),
                onboard : function int(0..100) --> int(-65536..65536),
                total_fuel_used : function int(0) --> int(-65536..65536)}
such that
    and([q1[1] >= minid_aircraft /\ q1[1] <= maxid_person /\ (q1[2] >= minid_city /\ q1[2] <= maxid_city) <->
         q1 in defined(init[at_])
             | q1 : (int(0..100), int(0..100))]),
    sum([toInt(q1[2]) | q1 <- init[at_]]) = init_at__percentage * |defined(init[at_])| / 100,
    and([q2[1] >= minid_person /\ q2[1] <= maxid_person /\ (q2[2] >= minid_aircraft /\ q2[2] <= maxid_aircraft) <->
         q2 in defined(init[in_])
             | q2 : (int(0..100), int(0..100))]),
    sum([toInt(q2[2]) | q2 <- init[in_]]) = init_in__percentage * |defined(init[in_])| / 100,
    and([q3 >= minid_aircraft /\ q3 <= maxid_aircraft <-> q3 in defined(init[fuel]) | q3 : int(0..100)]),
    and([q3[2] >= init_fuel_range_middle - init_fuel_range_delta | q3 <- init[fuel]]),
    and([q3[2] <= init_fuel_range_middle + init_fuel_range_delta | q3 <- init[fuel]]),
    and([q4[1] >= minid_city /\ q4[1] <= maxid_city /\ (q4[2] >= minid_city /\ q4[2] <= maxid_city) <->
         q4 in defined(init[distance])
             | q4 : (int(0..100), int(0..100))]),
    and([q4[2] >= init_distance_range_middle - init_distance_range_delta | q4 <- init[distance]]),
    and([q4[2] <= init_distance_range_middle + init_distance_range_delta | q4 <- init[distance]]),
    and([q5 >= minid_aircraft /\ q5 <= maxid_aircraft <-> q5 in defined(init[capacity]) | q5 : int(0..100)]),
    and([q5[2] >= init_capacity_range_middle - init_capacity_range_delta | q5 <- init[capacity]]),
    and([q5[2] <= init_capacity_range_middle + init_capacity_range_delta | q5 <- init[capacity]]),
    and([q6 >= minid_aircraft /\ q6 <= maxid_aircraft <-> q6 in defined(init[onboard]) | q6 : int(0..100)]),
    and([q6[2] >= init_onboard_range_middle - init_onboard_range_delta | q6 <- init[onboard]]),
    and([q6[2] <= init_onboard_range_middle + init_onboard_range_delta | q6 <- init[onboard]]),
    and([q7 >= 0 /\ q7 <= 0 <-> q7 in defined(init[total_fuel_used]) | q7 : int(0)]),
    and([q7[2] >= init_total_fuel_used_range_middle - init_total_fuel_used_range_delta | q7 <- init[total_fuel_used]]),
    and([q7[2] <= init_total_fuel_used_range_middle + init_total_fuel_used_range_delta | q7 <- init[total_fuel_used]])
such that
    and([init[fuel](a) > 0 /\ init[fuel](a) <= init[capacity](a)
             | a : int(0..100), a >= minid_aircraft, a <= maxid_aircraft]),
    and([init[onboard](a) = sum([toInt(value) | ((_, p2), value) <- init[in_], p2 = a])
             | a : int(0..100), a >= minid_aircraft, a <= maxid_aircraft]),
    init[total_fuel_used](0) = 0,
    and([and([init[distance]((c1, c2)) = init[distance]((c2, c1)) /\ init[distance]((c1, c2)) > 0
                  | c2 : int(0..100), c2 >= minid_city, c2 <= maxid_city])
             | c1 : int(0..100), c1 >= minid_city, c1 <= maxid_city]),
    and([1 = sum([toInt(value = true) | ((p1, _), value) <- init[at_], p1 = a])
             | a : int(0..100), a >= minid_aircraft, a <= maxid_aircraft]),
    and([!(1 = sum([toInt(value = true) | ((p1, _), value) <- init[at_], p = p1]) /\
           1 = sum([toInt(value = true) | ((p1, _), value) <- init[in_], p = p1]))
         /\
         (1 = sum([toInt(value = true) | ((p1, _), value) <- init[at_], p = p1]) \/
          1 = sum([toInt(value = true) | ((p1, _), value) <- init[in_], p = p1]))
             | p : int(0..100), p >= minid_person, p <= maxid_person])
given goal_at__cardMiddle: int(0..100)
given goal_at__cardDelta: int(0..50)
given goal_at__defined_tuple1_middle: int(0..100)
given goal_at__defined_tuple1_delta: int(0..50)
given goal_at__defined_tuple2_middle: int(0..100)
given goal_at__defined_tuple2_delta: int(0..50)
given goal_at__percentage: int(0..100)
given goal_in__cardMiddle: int(0..100)
given goal_in__cardDelta: int(0..50)
given goal_in__defined_tuple1_middle: int(0..100)
given goal_in__defined_tuple1_delta: int(0..50)
given goal_in__defined_tuple2_middle: int(0..100)
given goal_in__defined_tuple2_delta: int(0..50)
given goal_in__percentage: int(0..100)
given goal_onboard_cardMiddle: int(0..100)
given goal_onboard_cardDelta: int(0..50)
given goal_onboard_defined_middle: int(0..100)
given goal_onboard_defined_delta: int(0..50)
given goal_onboard_range_middle: int(-65536..65536)
given goal_onboard_range_delta: int(0..65536)
find goal:
        record {at_ : function (maxSize 100) (int(0..100), int(0..100)) --> bool,
                in_ : function (maxSize 100) (int(0..100), int(0..100)) --> bool,
                onboard : function (maxSize 100) int(0..100) --> int(-65536..65536)}
such that
    |goal[at_]| >= goal_at__cardMiddle - goal_at__cardDelta /\ |goal[at_]| <= goal_at__cardMiddle + goal_at__cardDelta,
    and([q8[1, 1] >= goal_at__defined_tuple1_middle - goal_at__defined_tuple1_delta | q8 <- goal[at_]]),
    and([q8[1, 1] <= goal_at__defined_tuple1_middle + goal_at__defined_tuple1_delta | q8 <- goal[at_]]),
    and([q8[1, 1] >= minid_aircraft | q8 <- goal[at_]]),
    and([q8[1, 1] <= maxid_person | q8 <- goal[at_]]),
    and([q8[1, 2] >= goal_at__defined_tuple2_middle - goal_at__defined_tuple2_delta | q8 <- goal[at_]]),
    and([q8[1, 2] <= goal_at__defined_tuple2_middle + goal_at__defined_tuple2_delta | q8 <- goal[at_]]),
    and([q8[1, 2] >= minid_city | q8 <- goal[at_]]),
    and([q8[1, 2] <= maxid_city | q8 <- goal[at_]]),
    sum([toInt(q8[2]) | q8 <- goal[at_]]) = goal_at__percentage * |defined(goal[at_])| / 100,
    |goal[in_]| >= goal_in__cardMiddle - goal_in__cardDelta /\ |goal[in_]| <= goal_in__cardMiddle + goal_in__cardDelta,
    and([q9[1, 1] >= goal_in__defined_tuple1_middle - goal_in__defined_tuple1_delta | q9 <- goal[in_]]),
    and([q9[1, 1] <= goal_in__defined_tuple1_middle + goal_in__defined_tuple1_delta | q9 <- goal[in_]]),
    and([q9[1, 1] >= minid_person | q9 <- goal[in_]]),
    and([q9[1, 1] <= maxid_person | q9 <- goal[in_]]),
    and([q9[1, 2] >= goal_in__defined_tuple2_middle - goal_in__defined_tuple2_delta | q9 <- goal[in_]]),
    and([q9[1, 2] <= goal_in__defined_tuple2_middle + goal_in__defined_tuple2_delta | q9 <- goal[in_]]),
    and([q9[1, 2] >= minid_aircraft | q9 <- goal[in_]]),
    and([q9[1, 2] <= maxid_aircraft | q9 <- goal[in_]]),
    sum([toInt(q9[2]) | q9 <- goal[in_]]) = goal_in__percentage * |defined(goal[in_])| / 100,
    |goal[onboard]| >= goal_onboard_cardMiddle - goal_onboard_cardDelta /\
    |goal[onboard]| <= goal_onboard_cardMiddle + goal_onboard_cardDelta,
    and([q10[1] >= goal_onboard_defined_middle - goal_onboard_defined_delta | q10 <- goal[onboard]]),
    and([q10[1] <= goal_onboard_defined_middle + goal_onboard_defined_delta | q10 <- goal[onboard]]),
    and([q10[1] >= minid_aircraft | q10 <- goal[onboard]]),
    and([q10[1] <= maxid_aircraft | q10 <- goal[onboard]]),
    and([q10[2] >= goal_onboard_range_middle - goal_onboard_range_delta | q10 <- goal[onboard]]),
    and([q10[2] <= goal_onboard_range_middle + goal_onboard_range_delta | q10 <- goal[onboard]])
such that and([goal[onboard](a) >= 0 | a : int(0..100), a >= minid_aircraft, a <= maxid_aircraft])

--------------------


File: problem-gen.essence.irace
minid_aircraft_middle "-minid_aircraft_middle " i (0, 100)
minid_aircraft_delta "-minid_aircraft_delta " i (0, 50)
maxid_aircraft_middle "-maxid_aircraft_middle " i (0, 100)
maxid_aircraft_delta "-maxid_aircraft_delta " i (0, 50)
minid_person_middle "-minid_person_middle " i (0, 100)
minid_person_delta "-minid_person_delta " i (0, 50)
maxid_person_middle "-maxid_person_middle " i (0, 100)
maxid_person_delta "-maxid_person_delta " i (0, 50)
minid_city_middle "-minid_city_middle " i (0, 100)
minid_city_delta "-minid_city_delta " i (0, 50)
maxid_city_middle "-maxid_city_middle " i (0, 100)
maxid_city_delta "-maxid_city_delta " i (0, 50)
init_at__percentage "-init_at__percentage " i (0, 100)
init_in__percentage "-init_in__percentage " i (0, 100)
init_fuel_range_middle "-init_fuel_range_middle " i (-65536, 65536)
init_fuel_range_delta "-init_fuel_range_delta " i (0, 65536)
init_distance_range_middle "-init_distance_range_middle " i (-65536, 65536)
init_distance_range_delta "-init_distance_range_delta " i (0, 65536)
init_capacity_range_middle "-init_capacity_range_middle " i (-65536, 65536)
init_capacity_range_delta "-init_capacity_range_delta " i (0, 65536)
init_onboard_range_middle "-init_onboard_range_middle " i (-65536, 65536)
init_onboard_range_delta "-init_onboard_range_delta " i (0, 65536)
init_total_fuel_used_range_middle "-init_total_fuel_used_range_middle " i (-65536, 65536)
init_total_fuel_used_range_delta "-init_total_fuel_used_range_delta " i (0, 65536)
goal_at__cardMiddle "-goal_at__cardMiddle " i,log (0, 100)
goal_at__cardDelta "-goal_at__cardDelta " i,log (0, 50)
goal_at__defined_tuple1_middle "-goal_at__defined_tuple1_middle " i (0, 100)
goal_at__defined_tuple1_delta "-goal_at__defined_tuple1_delta " i (0, 50)
goal_at__defined_tuple2_middle "-goal_at__defined_tuple2_middle " i (0, 100)
goal_at__defined_tuple2_delta "-goal_at__defined_tuple2_delta " i (0, 50)
goal_at__percentage "-goal_at__percentage " i (0, 100)
goal_in__cardMiddle "-goal_in__cardMiddle " i,log (0, 100)
goal_in__cardDelta "-goal_in__cardDelta " i,log (0, 50)
goal_in__defined_tuple1_middle "-goal_in__defined_tuple1_middle " i (0, 100)
goal_in__defined_tuple1_delta "-goal_in__defined_tuple1_delta " i (0, 50)
goal_in__defined_tuple2_middle "-goal_in__defined_tuple2_middle " i (0, 100)
goal_in__defined_tuple2_delta "-goal_in__defined_tuple2_delta " i (0, 50)
goal_in__percentage "-goal_in__percentage " i (0, 100)
goal_onboard_cardMiddle "-goal_onboard_cardMiddle " i,log (0, 100)
goal_onboard_cardDelta "-goal_onboard_cardDelta " i,log (0, 50)
goal_onboard_defined_middle "-goal_onboard_defined_middle " i (0, 100)
goal_onboard_defined_delta "-goal_onboard_defined_delta " i (0, 50)
goal_onboard_range_middle "-goal_onboard_range_middle " i (-65536, 65536)
goal_onboard_range_delta "-goal_onboard_range_delta " i (0, 65536)

--------------------


$ conjure parameter-generator problem.essence --essence-out problem-gen.essence --MININT -10 --MAXINT 50
File: problem-gen.essence
language Essence 1.3

given minid_aircraft_middle: int(-10..50)
given minid_aircraft_delta: int(0..30)
find minid_aircraft: int(-10..50)
such that
    minid_aircraft >= minid_aircraft_middle - minid_aircraft_delta,
    minid_aircraft <= minid_aircraft_middle + minid_aircraft_delta
given maxid_aircraft_middle: int(-10..50)
given maxid_aircraft_delta: int(0..30)
find maxid_aircraft: int(-10..50)
such that
    maxid_aircraft >= maxid_aircraft_middle - maxid_aircraft_delta,
    maxid_aircraft <= maxid_aircraft_middle + maxid_aircraft_delta
given minid_person_middle: int(-10..50)
given minid_person_delta: int(0..30)
find minid_person: int(-10..50)
such that
    minid_person >= minid_person_middle - minid_person_delta,
    minid_person <= minid_person_middle + minid_person_delta
given maxid_person_middle: int(-10..50)
given maxid_person_delta: int(0..30)
find maxid_person: int(-10..50)
such that
    maxid_person >= maxid_person_middle - maxid_person_delta,
    maxid_person <= maxid_person_middle + maxid_person_delta
given minid_city_middle: int(-10..50)
given minid_city_delta: int(0..30)
find minid_city: int(-10..50)
such that
    minid_city >= minid_city_middle - minid_city_delta,
    minid_city <= minid_city_middle + minid_city_delta
given maxid_city_middle: int(-10..50)
given maxid_city_delta: int(0..30)
find maxid_city: int(-10..50)
such that
    maxid_city >= maxid_city_middle - maxid_city_delta,
    maxid_city <= maxid_city_middle + maxid_city_delta
given init_at__percentage: int(0..100)
given init_in__percentage: int(0..100)
given init_fuel_range_middle: int(-65536..65536)
given init_fuel_range_delta: int(0..65536)
given init_distance_range_middle: int(-65536..65536)
given init_distance_range_delta: int(0..65536)
given init_capacity_range_middle: int(-65536..65536)
given init_capacity_range_delta: int(0..65536)
given init_onboard_range_middle: int(-65536..65536)
given init_onboard_range_delta: int(0..65536)
given init_total_fuel_used_range_middle: int(-65536..65536)
given init_total_fuel_used_range_delta: int(0..65536)
find init:
        record {at_ : function (int(-10..50), int(-10..50)) --> bool,
                in_ : function (int(-10..50), int(-10..50)) --> bool,
                fuel : function int(-10..50) --> int(-65536..65536),
                distance : function (int(-10..50), int(-10..50)) --> int(-65536..65536),
                capacity : function int(-10..50) --> int(-65536..65536),
                onboard : function int(-10..50) --> int(-65536..65536),
                total_fuel_used : function int(0) --> int(-65536..65536)}
such that
    and([q1[1] >= minid_aircraft /\ q1[1] <= maxid_person /\ (q1[2] >= minid_city /\ q1[2] <= maxid_city) <->
         q1 in defined(init[at_])
             | q1 : (int(-10..50), int(-10..50))]),
    sum([toInt(q1[2]) | q1 <- init[at_]]) = init_at__percentage * |defined(init[at_])| / 100,
    and([q2[1] >= minid_person /\ q2[1] <= maxid_person /\ (q2[2] >= minid_aircraft /\ q2[2] <= maxid_aircraft) <->
         q2 in defined(init[in_])
             | q2 : (int(-10..50), int(-10..50))]),
    sum([toInt(q2[2]) | q2 <- init[in_]]) = init_in__percentage * |defined(init[in_])| / 100,
    and([q3 >= minid_aircraft /\ q3 <= maxid_aircraft <-> q3 in defined(init[fuel]) | q3 : int(-10..50)]),
    and([q3[2] >= init_fuel_range_middle - init_fuel_range_delta | q3 <- init[fuel]]),
    and([q3[2] <= init_fuel_range_middle + init_fuel_range_delta | q3 <- init[fuel]]),
    and([q4[1] >= minid_city /\ q4[1] <= maxid_city /\ (q4[2] >= minid_city /\ q4[2] <= maxid_city) <->
         q4 in defined(init[distance])
             | q4 : (int(-10..50), int(-10..50))]),
    and([q4[2] >= init_distance_range_middle - init_distance_range_delta | q4 <- init[distance]]),
    and([q4[2] <= init_distance_range_middle + init_distance_range_delta | q4 <- init[distance]]),
    and([q5 >= minid_aircraft /\ q5 <= maxid_aircraft <-> q5 in defined(init[capacity]) | q5 : int(-10..50)]),
    and([q5[2] >= init_capacity_range_middle - init_capacity_range_delta | q5 <- init[capacity]]),
    and([q5[2] <= init_capacity_range_middle + init_capacity_range_delta | q5 <- init[capacity]]),
    and([q6 >= minid_aircraft /\ q6 <= maxid_aircraft <-> q6 in defined(init[onboard]) | q6 : int(-10..50)]),
    and([q6[2] >= init_onboard_range_middle - init_onboard_range_delta | q6 <- init[onboard]]),
    and([q6[2] <= init_onboard_range_middle + init_onboard_range_delta | q6 <- init[onboard]]),
    and([q7 >= 0 /\ q7 <= 0 <-> q7 in defined(init[total_fuel_used]) | q7 : int(0)]),
    and([q7[2] >= init_total_fuel_used_range_middle - init_total_fuel_used_range_delta | q7 <- init[total_fuel_used]]),
    and([q7[2] <= init_total_fuel_used_range_middle + init_total_fuel_used_range_delta | q7 <- init[total_fuel_used]])
such that
    and([init[fuel](a) > 0 /\ init[fuel](a) <= init[capacity](a)
             | a : int(-10..50), a >= minid_aircraft, a <= maxid_aircraft]),
    and([init[onboard](a) = sum([toInt(value) | ((_, p2), value) <- init[in_], p2 = a])
             | a : int(-10..50), a >= minid_aircraft, a <= maxid_aircraft]),
    init[total_fuel_used](0) = 0,
    and([and([init[distance]((c1, c2)) = init[distance]((c2, c1)) /\ init[distance]((c1, c2)) > 0
                  | c2 : int(-10..50), c2 >= minid_city, c2 <= maxid_city])
             | c1 : int(-10..50), c1 >= minid_city, c1 <= maxid_city]),
    and([1 = sum([toInt(value = true) | ((p1, _), value) <- init[at_], p1 = a])
             | a : int(-10..50), a >= minid_aircraft, a <= maxid_aircraft]),
    and([!(1 = sum([toInt(value = true) | ((p1, _), value) <- init[at_], p = p1]) /\
           1 = sum([toInt(value = true) | ((p1, _), value) <- init[in_], p = p1]))
         /\
         (1 = sum([toInt(value = true) | ((p1, _), value) <- init[at_], p = p1]) \/
          1 = sum([toInt(value = true) | ((p1, _), value) <- init[in_], p = p1]))
             | p : int(-10..50), p >= minid_person, p <= maxid_person])
given goal_at__cardMiddle: int(-10..50)
given goal_at__cardDelta: int(0..25)
given goal_at__defined_tuple1_middle: int(-10..50)
given goal_at__defined_tuple1_delta: int(0..30)
given goal_at__defined_tuple2_middle: int(-10..50)
given goal_at__defined_tuple2_delta: int(0..30)
given goal_at__percentage: int(0..100)
given goal_in__cardMiddle: int(-10..50)
given goal_in__cardDelta: int(0..25)
given goal_in__defined_tuple1_middle: int(-10..50)
given goal_in__defined_tuple1_delta: int(0..30)
given goal_in__defined_tuple2_middle: int(-10..50)
given goal_in__defined_tuple2_delta: int(0..30)
given goal_in__percentage: int(0..100)
given goal_onboard_cardMiddle: int(-10..50)
given goal_onboard_cardDelta: int(0..25)
given goal_onboard_defined_middle: int(-10..50)
given goal_onboard_defined_delta: int(0..30)
given goal_onboard_range_middle: int(-65536..65536)
given goal_onboard_range_delta: int(0..65536)
find goal:
        record {at_ : function (maxSize 50) (int(-10..50), int(-10..50)) --> bool,
                in_ : function (maxSize 50) (int(-10..50), int(-10..50)) --> bool,
                onboard : function (maxSize 50) int(-10..50) --> int(-65536..65536)}
such that
    |goal[at_]| >= goal_at__cardMiddle - goal_at__cardDelta /\ |goal[at_]| <= goal_at__cardMiddle + goal_at__cardDelta,
    and([q8[1, 1] >= goal_at__defined_tuple1_middle - goal_at__defined_tuple1_delta | q8 <- goal[at_]]),
    and([q8[1, 1] <= goal_at__defined_tuple1_middle + goal_at__defined_tuple1_delta | q8 <- goal[at_]]),
    and([q8[1, 1] >= minid_aircraft | q8 <- goal[at_]]),
    and([q8[1, 1] <= maxid_person | q8 <- goal[at_]]),
    and([q8[1, 2] >= goal_at__defined_tuple2_middle - goal_at__defined_tuple2_delta | q8 <- goal[at_]]),
    and([q8[1, 2] <= goal_at__defined_tuple2_middle + goal_at__defined_tuple2_delta | q8 <- goal[at_]]),
    and([q8[1, 2] >= minid_city | q8 <- goal[at_]]),
    and([q8[1, 2] <= maxid_city | q8 <- goal[at_]]),
    sum([toInt(q8[2]) | q8 <- goal[at_]]) = goal_at__percentage * |defined(goal[at_])| / 100,
    |goal[in_]| >= goal_in__cardMiddle - goal_in__cardDelta /\ |goal[in_]| <= goal_in__cardMiddle + goal_in__cardDelta,
    and([q9[1, 1] >= goal_in__defined_tuple1_middle - goal_in__defined_tuple1_delta | q9 <- goal[in_]]),
    and([q9[1, 1] <= goal_in__defined_tuple1_middle + goal_in__defined_tuple1_delta | q9 <- goal[in_]]),
    and([q9[1, 1] >= minid_person | q9 <- goal[in_]]),
    and([q9[1, 1] <= maxid_person | q9 <- goal[in_]]),
    and([q9[1, 2] >= goal_in__defined_tuple2_middle - goal_in__defined_tuple2_delta | q9 <- goal[in_]]),
    and([q9[1, 2] <= goal_in__defined_tuple2_middle + goal_in__defined_tuple2_delta | q9 <- goal[in_]]),
    and([q9[1, 2] >= minid_aircraft | q9 <- goal[in_]]),
    and([q9[1, 2] <= maxid_aircraft | q9 <- goal[in_]]),
    sum([toInt(q9[2]) | q9 <- goal[in_]]) = goal_in__percentage * |defined(goal[in_])| / 100,
    |goal[onboard]| >= goal_onboard_cardMiddle - goal_onboard_cardDelta /\
    |goal[onboard]| <= goal_onboard_cardMiddle + goal_onboard_cardDelta,
    and([q10[1] >= goal_onboard_defined_middle - goal_onboard_defined_delta | q10 <- goal[onboard]]),
    and([q10[1] <= goal_onboard_defined_middle + goal_onboard_defined_delta | q10 <- goal[onboard]]),
    and([q10[1] >= minid_aircraft | q10 <- goal[onboard]]),
    and([q10[1] <= maxid_aircraft | q10 <- goal[onboard]]),
    and([q10[2] >= goal_onboard_range_middle - goal_onboard_range_delta | q10 <- goal[onboard]]),
    and([q10[2] <= goal_onboard_range_middle + goal_onboard_range_delta | q10 <- goal[onboard]])
such that and([goal[onboard](a) >= 0 | a : int(-10..50), a >= minid_aircraft, a <= maxid_aircraft])

--------------------


File: problem-gen.essence.irace
minid_aircraft_middle "-minid_aircraft_middle " i (-10, 50)
minid_aircraft_delta "-minid_aircraft_delta " i (0, 30)
maxid_aircraft_middle "-maxid_aircraft_middle " i (-10, 50)
maxid_aircraft_delta "-maxid_aircraft_delta " i (0, 30)
minid_person_middle "-minid_person_middle " i (-10, 50)
minid_person_delta "-minid_person_delta " i (0, 30)
maxid_person_middle "-maxid_person_middle " i (-10, 50)
maxid_person_delta "-maxid_person_delta " i (0, 30)
minid_city_middle "-minid_city_middle " i (-10, 50)
minid_city_delta "-minid_city_delta " i (0, 30)
maxid_city_middle "-maxid_city_middle " i (-10, 50)
maxid_city_delta "-maxid_city_delta " i (0, 30)
init_at__percentage "-init_at__percentage " i (0, 100)
init_in__percentage "-init_in__percentage " i (0, 100)
init_fuel_range_middle "-init_fuel_range_middle " i (-65536, 65536)
init_fuel_range_delta "-init_fuel_range_delta " i (0, 65536)
init_distance_range_middle "-init_distance_range_middle " i (-65536, 65536)
init_distance_range_delta "-init_distance_range_delta " i (0, 65536)
init_capacity_range_middle "-init_capacity_range_middle " i (-65536, 65536)
init_capacity_range_delta "-init_capacity_range_delta " i (0, 65536)
init_onboard_range_middle "-init_onboard_range_middle " i (-65536, 65536)
init_onboard_range_delta "-init_onboard_range_delta " i (0, 65536)
init_total_fuel_used_range_middle "-init_total_fuel_used_range_middle " i (-65536, 65536)
init_total_fuel_used_range_delta "-init_total_fuel_used_range_delta " i (0, 65536)
goal_at__cardMiddle "-goal_at__cardMiddle " i,log (-10, 50)
goal_at__cardDelta "-goal_at__cardDelta " i,log (0, 25)
goal_at__defined_tuple1_middle "-goal_at__defined_tuple1_middle " i (-10, 50)
goal_at__defined_tuple1_delta "-goal_at__defined_tuple1_delta " i (0, 30)
goal_at__defined_tuple2_middle "-goal_at__defined_tuple2_middle " i (-10, 50)
goal_at__defined_tuple2_delta "-goal_at__defined_tuple2_delta " i (0, 30)
goal_at__percentage "-goal_at__percentage " i (0, 100)
goal_in__cardMiddle "-goal_in__cardMiddle " i,log (-10, 50)
goal_in__cardDelta "-goal_in__cardDelta " i,log (0, 25)
goal_in__defined_tuple1_middle "-goal_in__defined_tuple1_middle " i (-10, 50)
goal_in__defined_tuple1_delta "-goal_in__defined_tuple1_delta " i (0, 30)
goal_in__defined_tuple2_middle "-goal_in__defined_tuple2_middle " i (-10, 50)
goal_in__defined_tuple2_delta "-goal_in__defined_tuple2_delta " i (0, 30)
goal_in__percentage "-goal_in__percentage " i (0, 100)
goal_onboard_cardMiddle "-goal_onboard_cardMiddle " i,log (-10, 50)
goal_onboard_cardDelta "-goal_onboard_cardDelta " i,log (0, 25)
goal_onboard_defined_middle "-goal_onboard_defined_middle " i (-10, 50)
goal_onboard_defined_delta "-goal_onboard_defined_delta " i (0, 30)
goal_onboard_range_middle "-goal_onboard_range_middle " i (-65536, 65536)
goal_onboard_range_delta "-goal_onboard_range_delta " i (0, 65536)

--------------------


