$ conjure parameter-generator problem.essence --essence-out problem-gen.essence
File: problem-gen.essence
language Essence 1.3

given a_middle: int(0..100)
given a_delta: int(0..50)
find a: int(0..100)
such that
    a >= a_middle - a_delta,
    a <= a_middle + a_delta
given b_middle: int(10..100)
given b_delta: int(0..45)
find b: int(10..100)
such that
    b >= b_middle - b_delta,
    b <= b_middle + b_delta
given c_middle: int(0..20)
given c_delta: int(0..10)
find c: int(0..20)
such that
    c >= c_middle - c_delta,
    c <= c_middle + c_delta
given d_middle: int(10..20)
given d_delta: int(0..5)
find d: int(10..20)
such that
    d >= d_middle - d_delta,
    d <= d_middle + d_delta
given e_middle: int(10..20)
given e_delta: int(0..5)
find e: int(10..20)
such that
    e >= e_middle - e_delta,
    e <= e_middle + e_delta,
    e >= b,
    e <= c
given f_middle: int(0..20)
given f_delta: int(0..10)
find f: int(0..20)
such that
    f >= f_middle - f_delta,
    f <= f_middle + f_delta,
    f >= a,
    f <= d

--------------------


File: problem-gen.essence.irace
a_middle "-a_middle " i (0, 100)
a_delta "-a_delta " i (0, 50)
b_middle "-b_middle " i (10, 100)
b_delta "-b_delta " i (0, 45)
c_middle "-c_middle " i (0, 20)
c_delta "-c_delta " i (0, 10)
d_middle "-d_middle " i (10, 20)
d_delta "-d_delta " i (0, 5)
e_middle "-e_middle " i (10, 20)
e_delta "-e_delta " i (0, 5)
f_middle "-f_middle " i (0, 20)
f_delta "-f_delta " i (0, 10)

--------------------


$ conjure parameter-generator problem.essence --essence-out problem-gen.essence --MININT -10 --MAXINT 50
File: problem-gen.essence
language Essence 1.3

given a_middle: int(-10..50)
given a_delta: int(0..30)
find a: int(-10..50)
such that
    a >= a_middle - a_delta,
    a <= a_middle + a_delta
given b_middle: int(10..50)
given b_delta: int(0..20)
find b: int(10..50)
such that
    b >= b_middle - b_delta,
    b <= b_middle + b_delta
given c_middle: int(-10..20)
given c_delta: int(0..15)
find c: int(-10..20)
such that
    c >= c_middle - c_delta,
    c <= c_middle + c_delta
given d_middle: int(10..20)
given d_delta: int(0..5)
find d: int(10..20)
such that
    d >= d_middle - d_delta,
    d <= d_middle + d_delta
given e_middle: int(10..20)
given e_delta: int(0..5)
find e: int(10..20)
such that
    e >= e_middle - e_delta,
    e <= e_middle + e_delta,
    e >= b,
    e <= c
given f_middle: int(-10..20)
given f_delta: int(0..15)
find f: int(-10..20)
such that
    f >= f_middle - f_delta,
    f <= f_middle + f_delta,
    f >= a,
    f <= d

--------------------


File: problem-gen.essence.irace
a_middle "-a_middle " i (-10, 50)
a_delta "-a_delta " i (0, 30)
b_middle "-b_middle " i (10, 50)
b_delta "-b_delta " i (0, 20)
c_middle "-c_middle " i (-10, 20)
c_delta "-c_delta " i (0, 15)
d_middle "-d_middle " i (10, 20)
d_delta "-d_delta " i (0, 5)
e_middle "-e_middle " i (10, 20)
e_delta "-e_delta " i (0, 5)
f_middle "-f_middle " i (-10, 20)
f_delta "-f_delta " i (0, 15)

--------------------


