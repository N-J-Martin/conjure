Generating models for permutation.essence
Generated models: model000001.eprime
Saved under: conjure-output
Savile Row: model000001.eprime permutation.param
Copying solution to: permutation-permutation-000001.solution
Copying solution to: permutation-permutation-000002.solution
Copying solution to: permutation-permutation-000003.solution
Copying solution to: permutation-permutation-000004.solution
Copying solution to: permutation-permutation-000005.solution
Copying solution to: permutation-permutation-000006.solution
Copying solution to: permutation-permutation-000007.solution
Copying solution to: permutation-permutation-000008.solution
Copying solution to: permutation-permutation-000009.solution
Copying solution to: permutation-permutation-000010.solution
Copying solution to: permutation-permutation-000011.solution
Copying solution to: permutation-permutation-000012.solution
Copying solution to: permutation-permutation-000013.solution
Copying solution to: permutation-permutation-000014.solution
Copying solution to: permutation-permutation-000015.solution
Copying solution to: permutation-permutation-000016.solution
Copying solution to: permutation-permutation-000017.solution
Copying solution to: permutation-permutation-000018.solution
Copying solution to: permutation-permutation-000019.solution
Copying solution to: permutation-permutation-000020.solution
language Essence 1.3

letting p be permutation((2, 3))
letting x be [1, 2, 3; int(4..6)]
letting y be [1, 3, 2; int(4..6)]
language Essence 1.3

letting p be permutation((2, 3))
letting x be [1, 3, 2; int(4..6)]
letting y be [1, 2, 3; int(4..6)]
language Essence 1.3

letting p be permutation((2, 3))
letting x be [2, 1, 3; int(4..6)]
letting y be [3, 1, 2; int(4..6)]
language Essence 1.3

letting p be permutation((2, 3))
letting x be [2, 3, 1; int(4..6)]
letting y be [3, 2, 1; int(4..6)]
language Essence 1.3

letting p be permutation((2, 3))
letting x be [3, 1, 2; int(4..6)]
letting y be [2, 1, 3; int(4..6)]
language Essence 1.3

letting p be permutation((2, 3))
letting x be [3, 2, 1; int(4..6)]
letting y be [2, 3, 1; int(4..6)]
language Essence 1.3

letting p be permutation((1, 2))
letting x be [1, 2, 3; int(4..6)]
letting y be [2, 1, 3; int(4..6)]
language Essence 1.3

letting p be permutation((1, 2))
letting x be [1, 3, 2; int(4..6)]
letting y be [2, 3, 1; int(4..6)]
language Essence 1.3

letting p be permutation((1, 2))
letting x be [2, 1, 3; int(4..6)]
letting y be [1, 2, 3; int(4..6)]
language Essence 1.3

letting p be permutation((1, 2))
letting x be [2, 3, 1; int(4..6)]
letting y be [1, 3, 2; int(4..6)]
language Essence 1.3

letting p be permutation((1, 2))
letting x be [3, 1, 2; int(4..6)]
letting y be [3, 2, 1; int(4..6)]
language Essence 1.3

letting p be permutation((1, 2))
letting x be [3, 2, 1; int(4..6)]
letting y be [3, 1, 2; int(4..6)]
language Essence 1.3

letting p be permutation((1, 2, 3))
letting x be [1, 2, 3; int(4..6)]
letting y be [2, 3, 1; int(4..6)]
language Essence 1.3

letting p be permutation((1, 2, 3))
letting x be [1, 3, 2; int(4..6)]
letting y be [2, 1, 3; int(4..6)]
language Essence 1.3

letting p be permutation((1, 2, 3))
letting x be [2, 1, 3; int(4..6)]
letting y be [3, 2, 1; int(4..6)]
language Essence 1.3

letting p be permutation((1, 2, 3))
letting x be [2, 3, 1; int(4..6)]
letting y be [3, 1, 2; int(4..6)]
language Essence 1.3

letting p be permutation((1, 2, 3))
letting x be [3, 1, 2; int(4..6)]
letting y be [1, 2, 3; int(4..6)]
language Essence 1.3

letting p be permutation((1, 2, 3))
letting x be [3, 2, 1; int(4..6)]
letting y be [1, 3, 2; int(4..6)]
language Essence 1.3

letting p be permutation((1, 3, 2))
letting x be [1, 2, 3; int(4..6)]
letting y be [3, 1, 2; int(4..6)]
language Essence 1.3

letting p be permutation((1, 3, 2))
letting x be [1, 3, 2; int(4..6)]
letting y be [3, 2, 1; int(4..6)]
