language ESSENCE' 1.0

given s: int
given fin1: int
given fin2: int
given fin3: int
given nums_Explicit: matrix indexed by [int(1..fin1)] of int(fin2..fin3)
letting let1 be fin1
letting let2 be [nums_Explicit[q8] | q8 : int(1..fin1)]
find x_ExplicitVarSizeWithMarker_Marker: int(0..let1)
find incumbent_x_ExplicitVarSizeWithMarker_Marker: int(0..let1)
find x_ExplicitVarSizeWithMarker_Values: matrix indexed by [int(1..let1)] of int(let2)
find incumbent_x_ExplicitVarSizeWithMarker_Values: matrix indexed by [int(1..let1)] of int(let2)
SNSGroup hasX : [x_ExplicitVarSizeWithMarker_Marker, x_ExplicitVarSizeWithMarker_Values]
find removeElem_activation: bool
find removeElem_nSize: int(1)
SNSNeighbourhood removeElem : (removeElem_nSize, removeElem_activation, hasX, [])
find addElem_activation: bool
find addElem_nSize: int(1)
SNSNeighbourhood addElem : (addElem_nSize, addElem_activation, hasX, [])
find findDoubleAdd_k: int([nums_Explicit[q40] | q40 : int(1..fin1)])
find findDoubleAdd_activation: bool
find findDoubleAdd_nSize: int(1)
SNSNeighbourhood findDoubleAdd : (findDoubleAdd_nSize, findDoubleAdd_activation, hasX, [findDoubleAdd_k])
SNSIncumbentMapping([x_ExplicitVarSizeWithMarker_Marker, x_ExplicitVarSizeWithMarker_Values],
                    [incumbent_x_ExplicitVarSizeWithMarker_Marker, incumbent_x_ExplicitVarSizeWithMarker_Values])
such that
    and([q46 <= x_ExplicitVarSizeWithMarker_Marker ->
         or([nums_Explicit[q48] = x_ExplicitVarSizeWithMarker_Values[q46] | q48 : int(1..fin1)])
             | q46 : int(1..let1)]),
    s =
    sum([toInt(q9 <= x_ExplicitVarSizeWithMarker_Marker) * catchUndef(x_ExplicitVarSizeWithMarker_Values[q9], 0)
             | q9 : int(1..let1)]),
    removeElem_activation ->
    or([q10 <= x_ExplicitVarSizeWithMarker_Marker /\
        (and([q12 <= incumbent_x_ExplicitVarSizeWithMarker_Marker ->
              or([q14 <= x_ExplicitVarSizeWithMarker_Marker /\
                  !(x_ExplicitVarSizeWithMarker_Values[q10] = x_ExplicitVarSizeWithMarker_Values[q14])
                  /\ x_ExplicitVarSizeWithMarker_Values[q14] = incumbent_x_ExplicitVarSizeWithMarker_Values[q12]
                      | q14 : int(1..let1)])
                  | q12 : int(1..let1)])
         /\
         and([q18 <= x_ExplicitVarSizeWithMarker_Marker /\
              !(x_ExplicitVarSizeWithMarker_Values[q10] = x_ExplicitVarSizeWithMarker_Values[q18])
              ->
              or([q20 <= incumbent_x_ExplicitVarSizeWithMarker_Marker /\
                  incumbent_x_ExplicitVarSizeWithMarker_Values[q20] = x_ExplicitVarSizeWithMarker_Values[q18]
                      | q20 : int(1..let1)])
                  | q18 : int(1..let1)]))
            | q10 : int(1..let1)]),
    addElem_activation ->
    or([q23 <= x_ExplicitVarSizeWithMarker_Marker /\
        (and([q25 <= incumbent_x_ExplicitVarSizeWithMarker_Marker ->
              or([q27 <= x_ExplicitVarSizeWithMarker_Marker /\
                  x_ExplicitVarSizeWithMarker_Values[q27] = incumbent_x_ExplicitVarSizeWithMarker_Values[q25]
                      | q27 : int(1..let1)])
              \/
              !or([q30 <= x_ExplicitVarSizeWithMarker_Marker /\
                   x_ExplicitVarSizeWithMarker_Values[q30] = x_ExplicitVarSizeWithMarker_Values[q23]
                       | q30 : int(1..let1)])
              /\ x_ExplicitVarSizeWithMarker_Values[q23] = incumbent_x_ExplicitVarSizeWithMarker_Values[q25]
                  | q25 : int(1..let1)])
         /\
         (and([q32 <= x_ExplicitVarSizeWithMarker_Marker ->
               or([q34 <= incumbent_x_ExplicitVarSizeWithMarker_Marker /\
                   incumbent_x_ExplicitVarSizeWithMarker_Values[q34] = x_ExplicitVarSizeWithMarker_Values[q32]
                       | q34 : int(1..let1)])
                   | q32 : int(1..let1)])
          /\
          (!or([q39 <= x_ExplicitVarSizeWithMarker_Marker /\
                x_ExplicitVarSizeWithMarker_Values[q39] = x_ExplicitVarSizeWithMarker_Values[q23]
                    | q39 : int(1..let1)])
           ->
           or([q37 <= incumbent_x_ExplicitVarSizeWithMarker_Marker /\
               incumbent_x_ExplicitVarSizeWithMarker_Values[q37] = x_ExplicitVarSizeWithMarker_Values[q23]
                   | q37 : int(1..let1)]))))
            | q23 : int(1..let1)]),
    findDoubleAdd_activation ->
    or([q42 <= x_ExplicitVarSizeWithMarker_Marker /\ x_ExplicitVarSizeWithMarker_Values[q42] = findDoubleAdd_k
            | q42 : int(1..let1)]),
    findDoubleAdd_activation ->
    or([q44 <= incumbent_x_ExplicitVarSizeWithMarker_Marker /\
        incumbent_x_ExplicitVarSizeWithMarker_Values[q44] = 2 * findDoubleAdd_k
            | q44 : int(1..let1)]),
    !findDoubleAdd_activation -> and([findDoubleAdd_k = min([nums_Explicit[q40] | q40 : int(1..fin1)]); int(1)]),
    and([q5 + 1 <= x_ExplicitVarSizeWithMarker_Marker ->
         x_ExplicitVarSizeWithMarker_Values[q5] < x_ExplicitVarSizeWithMarker_Values[q5 + 1]
             | q5 : int(1..let1 - 1)]),
    and([q6 > x_ExplicitVarSizeWithMarker_Marker -> x_ExplicitVarSizeWithMarker_Values[q6] = min(let2)
             | q6 : int(1..let1)]),
    1 <= x_ExplicitVarSizeWithMarker_Marker,
    x_ExplicitVarSizeWithMarker_Marker <= let1

