Generated the following SNS Neighbourhoods (14 of them in total)
Adding all of them to the model, use --filter-neighbourhoods to select a subset.
language Essence 1.4

SNSGroup x_neighbourhoodGroup : [x]
SNSNeighbourhood x_setAddSingle :
    (x_neighbourhoodGroup, size : int(1..2 ** (1 + (b - a))),
     such that
         frameUpdate(incumbent(x), x, [conjure_aux28],
                     [conjure_aux29, conjure_aux30],
                     conjure_aux29 = conjure_aux28 /\ |conjure_aux30| = size))
SNSNeighbourhood x_setLiftMultiple_setCollect :
    (x_neighbourhoodGroup, size : int(1..1 + (b - a)),
     such that
         frameUpdate(incumbent(x), x,
                     [conjure_aux9, conjure_aux10, conjure_aux11],
                     [conjure_aux12, conjure_aux13, conjure_aux14],
                     and([conjure_aux12 subsetEq conjure_aux9,
                          |conjure_aux9| - |conjure_aux12| = size,
                          conjure_aux13 subsetEq conjure_aux10,
                          |conjure_aux10| - |conjure_aux13| = size,
                          conjure_aux9 - conjure_aux12 = conjure_aux10 - conjure_aux13,
                          conjure_aux11 subsetEq conjure_aux14,
                          |conjure_aux14| - |conjure_aux11| = size,
                          and([q2 in conjure_aux14
                                   | q2 <- conjure_aux9, !(q2 in conjure_aux12)]);
                              int(1..8)])))
SNSNeighbourhood x_setLiftMultiple_setCrossOver :
    (x_neighbourhoodGroup, size : int(1..1 + (b - a)),
     such that
         frameUpdate(incumbent(x), x, [conjure_aux15, conjure_aux16],
                     [conjure_aux17, conjure_aux18],
                     and([conjure_aux15 union conjure_aux16 =
                          conjure_aux17 union conjure_aux18,
                          |conjure_aux17 - conjure_aux15| = size,
                          |conjure_aux18 - conjure_aux16| = size;
                              int(1..3)])))
SNSNeighbourhood x_setLiftMultiple_setMerge :
    (x_neighbourhoodGroup, size : int(1..1 + (b - a)),
     such that
         frameUpdate(incumbent(x), x, [conjure_aux22, conjure_aux23],
                     [conjure_aux24],
                     |conjure_aux22| <= size /\
                     conjure_aux22 union conjure_aux23 = conjure_aux24))
SNSNeighbourhood x_setLiftMultiple_setMove :
    (x_neighbourhoodGroup, size : int(1..1 + (b - a)),
     such that
         frameUpdate(incumbent(x), x, [conjure_aux5, conjure_aux6],
                     [conjure_aux7, conjure_aux8],
                     and([conjure_aux7 subsetEq conjure_aux5,
                          |conjure_aux5| - |conjure_aux7| = size,
                          conjure_aux6 subsetEq conjure_aux8,
                          |conjure_aux8| - |conjure_aux6| = size,
                          and([q1 in conjure_aux8
                                   | q1 <- conjure_aux5, !(q1 in conjure_aux7)]);
                              int(1..5)])))
SNSNeighbourhood x_setLiftMultiple_setSplit :
    (x_neighbourhoodGroup, size : int(1..1 + (b - a)),
     such that
         frameUpdate(incumbent(x), x, [conjure_aux19],
                     [conjure_aux20, conjure_aux21],
                     and([conjure_aux20 subsetEq conjure_aux19,
                          |conjure_aux19| - |conjure_aux20| = size, |conjure_aux21| = size,
                          and([q3 in conjure_aux21
                                   | q3 <- conjure_aux19, !(q3 in conjure_aux20)]);
                              int(1..4)])))
SNSNeighbourhood x_setLiftSingle_setAdd :
    (x_neighbourhoodGroup, size : int(1..1 + (b - a)),
     such that
         frameUpdate(incumbent(x), x, [conjure_aux1], [conjure_aux2],
                     conjure_aux1 subsetEq conjure_aux2 /\
                     |conjure_aux2| - |conjure_aux1| = size))
SNSNeighbourhood x_setLiftSingle_setDiff :
    (x_neighbourhoodGroup, size : int(1..1 + (b - a)),
     such that
         frameUpdate(incumbent(x), x, [conjure_aux1], [conjure_aux2],
                     and([size =
                          |conjure_aux1 - conjure_aux2| + |conjure_aux2 - conjure_aux1|;
                              int(1)])))
SNSNeighbourhood x_setLiftSingle_setRemove :
    (x_neighbourhoodGroup, size : int(1..1 + (b - a)),
     such that
         frameUpdate(incumbent(x), x, [conjure_aux1], [conjure_aux2],
                     conjure_aux2 subsetEq conjure_aux1 /\
                     |conjure_aux1| - |conjure_aux2| = size))
SNSNeighbourhood x_setLiftSingle_setSwap :
    (x_neighbourhoodGroup, size : int(1..1 + (b - a)),
     such that
         frameUpdate(incumbent(x), x, [conjure_aux1], [conjure_aux2],
                     |conjure_aux2 - conjure_aux1| = size /\
                     |conjure_aux1| = |conjure_aux2|))
SNSNeighbourhood x_setLiftSingle_setSwapAdd :
    (x_neighbourhoodGroup, size : int(1..1 + (b - a)),
     such that
         frameUpdate(incumbent(x), x, [conjure_aux1], [conjure_aux2],
                     |conjure_aux2 - conjure_aux1| = size /\
                     |conjure_aux2| >= |conjure_aux1|))
SNSNeighbourhood x_setLiftSingle_setSwapRemove :
    (x_neighbourhoodGroup, size : int(1..1 + (b - a)),
     such that
         frameUpdate(incumbent(x), x, [conjure_aux1], [conjure_aux2],
                     |conjure_aux1 - conjure_aux2| = size /\
                     |conjure_aux2| <= |conjure_aux1|))
SNSNeighbourhood x_setRemoveSingle :
    (x_neighbourhoodGroup, size : int(1..2 ** (1 + (b - a))),
     such that
         frameUpdate(incumbent(x), x, [conjure_aux25, conjure_aux26],
                     [conjure_aux27],
                     conjure_aux27 = conjure_aux25 /\ |conjure_aux26| = size))


